---
openapi: 3.0.2
info:
  title: Embat API
  description: Embat API enables connections between any third party application and
    Embat. Is organized around REST principles, using HTTP responses code and returning
    data in JSON format. While testing the API, you have to request **sandbox credentials**.
  contact:
    name: API Support
    url: https://embat.io
    email: tech@embat.io
  version: 2.90.0
  x-logo:
    url: https://storage.googleapis.com/embat-production.appspot.com/assets/embat_dark.svg
servers:
- description: production
  url: https://api.embat.io
paths:
  "/authentication/token":
    post:
      tags:
      - Authentication
      summary: Generate idToken
      description: Generate idToken JWT to set Authorization Bearer Header
      operationId: auth_token_authentication_token_post
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PostAuthenticationRequestSchema"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PostAuthenticationResponseSchema"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/accountingentries/{companyId}":
    get:
      tags:
      - AccountingEntries
      summary: List accounting entries
      description: List accounting entries
      operationId: list_accounting_entries_accountingentries__companyId__get
      parameters:
      - required: true
        schema:
          title: Companyid
          type: string
        name: companyId
        in: path
      - required: false
        schema:
          title: Reconciled
          type: boolean
        name: reconciled
        in: query
      - required: false
        schema:
          title: Accountingcode
          type: string
        name: accountingCode
        in: query
      - required: false
        schema:
          title: Startdate
          type: string
          format: date
        name: startDate
        in: query
      - required: false
        schema:
          title: Enddate
          type: string
          format: date
        name: endDate
        in: query
      - required: false
        schema:
          title: Startupdatedat
          type: string
          format: date-time
        name: startUpdatedAt
        in: query
      - required: false
        schema:
          title: Endupdatedat
          type: string
          format: date-time
        name: endUpdatedAt
        in: query
      - description: Param to limit the size of the list of objects of response. Default
          500 and max value 2K
        required: false
        schema:
          title: Response length of objects limit
          maximum: 2000
          type: integer
          description: Param to limit the size of the list of objects of response.
            Default 500 and max value 2K
          default: 500
        name: limit
        in: query
      - description: Key to obtain the next N objects of your query based on the limit
          value. You can obtain nextPageToken from response to iterate over pages.
        required: false
        schema:
          title: Pagination token
          type: string
          description: Key to obtain the next N objects of your query based on the
            limit value. You can obtain nextPageToken from response to iterate over
            pages.
        name: nextPageToken
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ListAccountingEntriesResponseSchema"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - HTTPBearer: []
    post:
      tags:
      - AccountingEntries
      summary: Create accounting entry
      description: 'Create accounting entry with optional custom id (customId). If
        you dont set <code>customId</code>, Embat will auto-generate it. '
      operationId: create_accounting_entry_accountingentries__companyId__post
      parameters:
      - required: true
        schema:
          title: Companyid
          type: string
        name: companyId
        in: path
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PostAccountingEntriesRequestSchema"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ModifyAccountingEntriesResponseSchema"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - HTTPBearer: []
    delete:
      tags:
      - AccountingEntries
      summary: Delete accounting entries bulk
      description: Delete accounting entries bulk by <code>customId</code>
      operationId: delete_accounting_entries_bulk_accountingentries__companyId__delete
      parameters:
      - required: true
        schema:
          title: Companyid
          type: string
        name: companyId
        in: path
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/BulkDeleteAccountingEntriesRequestSchema"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/BulkModifyAccountingEntriesResponseSchema"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - HTTPBearer: []
    patch:
      tags:
      - AccountingEntries
      summary: Update accounting entries bulk
      description: Update accounting entries variables by custom ids (customId)
      operationId: update_accounting_entries_bulk_accountingentries__companyId__patch
      parameters:
      - required: true
        schema:
          title: Companyid
          type: string
        name: companyId
        in: path
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/BulkPatchAccountingEntriesRequestSchema"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/BulkModifyAccountingEntriesResponseSchema"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - HTTPBearer: []
  "/accountingentries/{companyId}/{customId}":
    get:
      tags:
      - AccountingEntries
      summary: Retrieve accounting entry
      description: Retrieve accounting entry
      operationId: retrieve_accounting_entry_accountingentries__companyId___customId__get
      parameters:
      - required: true
        schema:
          title: Customid
          type: string
        name: customId
        in: path
      - required: true
        schema:
          title: Companyid
          type: string
        name: companyId
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GetAccountingEntriesResponseSchema"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - HTTPBearer: []
    delete:
      tags:
      - AccountingEntries
      summary: Delete accounting entry
      description: Delete accounting entry by <code>customId</code>
      operationId: delete_accounting_entry_accountingentries__companyId___customId__delete
      parameters:
      - required: true
        schema:
          title: Customid
          type: string
        name: customId
        in: path
      - required: true
        schema:
          title: Companyid
          type: string
        name: companyId
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ModifyAccountingEntriesResponseSchema"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - HTTPBearer: []
    patch:
      tags:
      - AccountingEntries
      summary: Update accounting entry
      description: Update accounting entry variables by custom id (customId)
      operationId: update_accounting_entry_accountingentries__companyId___customId__patch
      parameters:
      - required: true
        schema:
          title: Customid
          type: string
        name: customId
        in: path
      - required: true
        schema:
          title: Companyid
          type: string
        name: companyId
        in: path
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PatchAccountingEntriesRequestSchema"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ModifyAccountingEntriesResponseSchema"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - HTTPBearer: []
  "/accountingentries/{companyId}/bulk":
    post:
      tags:
      - AccountingEntries
      summary: Create accounting_entries bulk
      description: Create accounting entries with custom ids (customId) to make custom
        relationships or Embat will auto generate it.
      operationId: create_accounting_entries_bulk_accountingentries__companyId__bulk_post
      parameters:
      - required: true
        schema:
          title: Companyid
          type: string
        name: companyId
        in: path
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/BulkPostAccountingEntriesRequestSchema"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/BulkModifyAccountingEntriesResponseSchema"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - HTTPBearer: []
  "/accountingentries/accountingentrycode/{companyId}":
    delete:
      tags:
      - AccountingEntries
      summary: Delete accounting entries bulk by accountingEntryCode
      description: Delete accounting entries bulk by accountingEntryCode
      operationId: delete_accounting_entries_bulk_accountingentries_accountingentrycode__companyId__delete
      parameters:
      - required: true
        schema:
          title: Companyid
          type: string
        name: companyId
        in: path
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/BulkDeleteAccountingEntriesEntryCodeRequestSchema"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/BulkModifyAccountingEntriesResponseSchema"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - HTTPBearer: []
  "/accountingaccounts/{companyId}":
    get:
      tags:
      - AccountingAccounts
      summary: List accounting accounts
      description: List accounting accounts
      operationId: list_accountings_accounts_accountingaccounts__companyId__get
      parameters:
      - required: true
        schema:
          title: Companyid
          type: string
        name: companyId
        in: path
      - description: Param to limit the size of the list of objects of response. Default
          500 and max value 2K
        required: false
        schema:
          title: Response length of objects limit
          maximum: 2000
          type: integer
          description: Param to limit the size of the list of objects of response.
            Default 500 and max value 2K
          default: 500
        name: limit
        in: query
      - description: Key to obtain the next N objects of your query based on the limit
          value. You can obtain nextPageToken from response to iterate over pages.
        required: false
        schema:
          title: Pagination token
          type: string
          description: Key to obtain the next N objects of your query based on the
            limit value. You can obtain nextPageToken from response to iterate over
            pages.
        name: nextPageToken
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ListAccountingsAccountsResponseSchema"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - HTTPBearer: []
    post:
      tags:
      - AccountingAccounts
      summary: Create accounting account
      description: Create accounting account by accounting code
      operationId: create_accountings_account_accountingaccounts__companyId__post
      parameters:
      - required: true
        schema:
          title: Companyid
          type: string
        name: companyId
        in: path
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PostAccountingsAccountsRequestSchema"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ModifyAccountingsAccountsResponseSchema"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - HTTPBearer: []
    delete:
      tags:
      - AccountingAccounts
      summary: Delete accounting accounts bulk
      description: Delete accounting accounts bulk by <code>customId</code>
      operationId: delete_accountings_accounts_bulk_accountingaccounts__companyId__delete
      parameters:
      - required: true
        schema:
          title: Companyid
          type: string
        name: companyId
        in: path
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/BulkDeleteAccountingsAccountsRequestSchema"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/BulkModifyAccountingsAccountsResponseSchema"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - HTTPBearer: []
    patch:
      tags:
      - AccountingAccounts
      summary: Update accounting accounts bulk
      description: Update accounting accounts variables by custom ids (customId)
      operationId: update_accountings_accounts_bulk_accountingaccounts__companyId__patch
      parameters:
      - required: true
        schema:
          title: Companyid
          type: string
        name: companyId
        in: path
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/BulkPatchAccountingsAccountsRequestSchema"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/BulkModifyAccountingsAccountsResponseSchema"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - HTTPBearer: []
  "/accountingaccounts/{companyId}/{accountingCode}":
    get:
      tags:
      - AccountingAccounts
      summary: Retrieve accounting account
      description: Retrieve accounting account
      operationId: retrieve_accountings_account_accountingaccounts__companyId___accountingCode__get
      parameters:
      - required: true
        schema:
          title: Accountingcode
          type: string
        name: accountingCode
        in: path
      - required: true
        schema:
          title: Companyid
          type: string
        name: companyId
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GetAccountingsAccountsResponseSchema"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - HTTPBearer: []
    delete:
      tags:
      - AccountingAccounts
      summary: Delete accounting account
      description: Delete accounting account by <code>customId</code>
      operationId: delete_accountings_account_accountingaccounts__companyId___accountingCode__delete
      parameters:
      - required: true
        schema:
          title: Accountingcode
          type: string
        name: accountingCode
        in: path
      - required: true
        schema:
          title: Companyid
          type: string
        name: companyId
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ModifyAccountingsAccountsResponseSchema"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - HTTPBearer: []
    patch:
      tags:
      - AccountingAccounts
      summary: Update accounting account
      description: Update accounting account variables by custom id (customId)
      operationId: update_accountings_account_accountingaccounts__companyId___accountingCode__patch
      parameters:
      - required: true
        schema:
          title: Accountingcode
          type: string
        name: accountingCode
        in: path
      - required: true
        schema:
          title: Companyid
          type: string
        name: companyId
        in: path
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PatchAccountingsAccountsRequestSchema"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ModifyAccountingsAccountsResponseSchema"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - HTTPBearer: []
  "/accountingaccounts/{companyId}/bulk":
    post:
      tags:
      - AccountingAccounts
      summary: Create accounting accounts bulk
      description: Create accounting accounts with accounting codes
      operationId: create_accountings_accounts_bulk_accountingaccounts__companyId__bulk_post
      parameters:
      - required: true
        schema:
          title: Companyid
          type: string
        name: companyId
        in: path
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/BulkPostAccountingsAccountsRequestSchema"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/BulkModifyAccountingsAccountsResponseSchema"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - HTTPBearer: []
  "/attributes/{companyId}":
    get:
      tags:
      - Attributes
      summary: List attributes
      description: List attributes
      operationId: list_attributes_attributes__companyId__get
      parameters:
      - required: true
        schema:
          title: Companyid
          type: string
        name: companyId
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ListAttributesResponseSchema"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - HTTPBearer: []
    post:
      tags:
      - Attributes
      summary: Create attribute
      description: Create attribute by accounting code
      operationId: create_attribute_attributes__companyId__post
      parameters:
      - required: true
        schema:
          title: Companyid
          type: string
        name: companyId
        in: path
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PostAttributesRequestSchema"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ModifyAttributesResponseSchema"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - HTTPBearer: []
    delete:
      tags:
      - Attributes
      summary: Delete attributes bulk
      description: Delete attributes bulk by <code>customId</code>
      operationId: delete_attributes_bulk_attributes__companyId__delete
      parameters:
      - required: true
        schema:
          title: Companyid
          type: string
        name: companyId
        in: path
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/BulkDeleteAttributesRequestSchema"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/BulkModifyAttributesResponseSchema"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - HTTPBearer: []
    patch:
      tags:
      - Attributes
      summary: Update attributes bulk
      description: Update attributes variables by custom ids (customId)
      operationId: update_attributes_bulk_attributes__companyId__patch
      parameters:
      - required: true
        schema:
          title: Companyid
          type: string
        name: companyId
        in: path
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/BulkPatchAttributesRequestSchema"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/BulkModifyAttributesResponseSchema"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - HTTPBearer: []
  "/attributes/{companyId}/{customId}":
    get:
      tags:
      - Attributes
      summary: Retrieve attribute
      description: Retrieve attribute
      operationId: retrieve_attribute_attributes__companyId___customId__get
      parameters:
      - required: true
        schema:
          title: Customid
          type: string
        name: customId
        in: path
      - required: true
        schema:
          title: Companyid
          type: string
        name: companyId
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GetAttributesResponseSchema"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - HTTPBearer: []
    delete:
      tags:
      - Attributes
      summary: Delete attribute
      description: Delete attribute by <code>customId</code>
      operationId: delete_attribute_attributes__companyId___customId__delete
      parameters:
      - required: true
        schema:
          title: Customid
          type: string
        name: customId
        in: path
      - required: true
        schema:
          title: Companyid
          type: string
        name: companyId
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ModifyAttributesResponseSchema"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - HTTPBearer: []
    patch:
      tags:
      - Attributes
      summary: Update attribute
      description: Update attribute variables by custom id (customId)
      operationId: update_attribute_attributes__companyId___customId__patch
      parameters:
      - required: true
        schema:
          title: Customid
          type: string
        name: customId
        in: path
      - required: true
        schema:
          title: Companyid
          type: string
        name: companyId
        in: path
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PatchAttributesRequestSchema"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ModifyAttributesResponseSchema"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - HTTPBearer: []
  "/attributes/{companyId}/bulk":
    post:
      tags:
      - Attributes
      summary: Create attributes bulk
      description: Create attributes with accounting codes
      operationId: create_attributes_bulk_attributes__companyId__bulk_post
      parameters:
      - required: true
        schema:
          title: Companyid
          type: string
        name: companyId
        in: path
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/BulkPostAttributesRequestSchema"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/BulkModifyAttributesResponseSchema"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - HTTPBearer: []
  "/attributes/{companyId}/{customId}/values/bulk":
    post:
      tags:
      - Attributes
      summary: Add values to an attribute
      description: Add values to an attribute. If the customId of the value already
        exists, that value will be replaced.
      operationId: add_attribute_values_attributes__companyId___customId__values_bulk_post
      parameters:
      - required: true
        schema:
          title: Customid
          type: string
        name: customId
        in: path
      - required: true
        schema:
          title: Companyid
          type: string
        name: companyId
        in: path
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/BulkPostAttributesValuesRequestSchema"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/BulkModifyAttributesResponseSchema"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - HTTPBearer: []
  "/attributes/{companyId}/{customId}/values":
    delete:
      tags:
      - Attributes
      summary: Remove values to an attribute
      description: Remove values to an attribute by customId
      operationId: remove_attribute_values_attributes__companyId___customId__values_delete
      parameters:
      - required: true
        schema:
          title: Customid
          type: string
        name: customId
        in: path
      - required: true
        schema:
          title: Companyid
          type: string
        name: companyId
        in: path
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/BulkDeleteAttributesRequestSchema"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/BulkModifyAttributesResponseSchema"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - HTTPBearer: []
  "/banks/{companyId}":
    get:
      tags:
      - Banks
      summary: List banks
      description: List company banks.
      operationId: list_banks_banks__companyId__get
      parameters:
      - required: true
        schema:
          title: Companyid
          type: string
        name: companyId
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ListBanksResponseSchema"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - HTTPBearer: []
  "/banks/{companyId}/{id}":
    get:
      tags:
      - Banks
      summary: Retrieve bank
      description: Retrieve bank by id
      operationId: retrieve_bank_banks__companyId___id__get
      parameters:
      - required: true
        schema:
          title: Id
          type: string
        name: id
        in: path
      - required: true
        schema:
          title: Companyid
          type: string
        name: companyId
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GetBanksResponseSchema"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - HTTPBearer: []
  "/balances/{companyId}":
    get:
      tags:
      - Balances
      summary: List balances
      description: List bank products balances
      operationId: list_balances_balances__companyId__get
      parameters:
      - required: true
        schema:
          title: Companyid
          type: string
        name: companyId
        in: path
      - required: false
        schema:
          title: Productid
          type: string
        name: productId
        in: query
      - required: false
        schema:
          title: Startdate
          type: string
          format: date
        name: startDate
        in: query
      - required: false
        schema:
          title: Enddate
          type: string
          format: date
        name: endDate
        in: query
      - description: Param to limit the size of the list of objects of response. Default
          500 and max value 5K
        required: false
        schema:
          title: Response length of objects limit
          maximum: 5000
          type: integer
          description: Param to limit the size of the list of objects of response.
            Default 500 and max value 5K
          default: 500
        name: limit
        in: query
      - description: Key to obtain the next N objects of your query based on the limit
          value. You can obtain nextPageToken from response to iterate over pages.
        required: false
        schema:
          title: Pagination token
          type: string
          description: Key to obtain the next N objects of your query based on the
            limit value. You can obtain nextPageToken from response to iterate over
            pages.
        name: nextPageToken
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ListBalancesResponseSchema"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - HTTPBearer: []
  "/balances/{companyId}/{id}":
    get:
      tags:
      - Balances
      summary: Retrieve balance
      description: Retrieve balance by id
      operationId: retrieve_balance_balances__companyId___id__get
      parameters:
      - required: true
        schema:
          title: Id
          type: string
        name: id
        in: path
      - required: true
        schema:
          title: Companyid
          type: string
        name: companyId
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GetBalancesResponseSchema"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - HTTPBearer: []
  "/companies":
    get:
      tags:
      - Companies
      summary: List user companies
      description: List all the companies configured in your application. You need
        the `company.id` value to identify the company in the rest of the API
      operationId: list_companies_companies_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ListCompaniesResponseSchema"
      security:
      - HTTPBearer: []
  "/companies/{companyId}":
    get:
      tags:
      - Companies
      summary: Retrieve company
      description: Retrieve company detail by id
      operationId: retrieve_company_companies__companyId__get
      parameters:
      - required: true
        schema:
          title: Companyid
          type: string
        name: companyId
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CompanyResponseSchema"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - HTTPBearer: []
  "/companies/{companyId}/users":
    get:
      tags:
      - Companies
      summary: List company users
      description: List all the users configured in your company. You need the `user.id`
        value to identify the user in the rest of the API
      operationId: list_company_users_companies__companyId__users_get
      parameters:
      - required: true
        schema:
          title: Companyid
          type: string
        name: companyId
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ListCompanyUsersResponseSchema"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - HTTPBearer: []
  "/categories/{companyId}":
    get:
      tags:
      - Categories
      summary: List categories
      description: List company treasury categories
      operationId: list_categories_categories__companyId__get
      parameters:
      - required: true
        schema:
          title: Companyid
          type: string
        name: companyId
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ListCategoriesResponseSchema"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - HTTPBearer: []
  "/categories/{companyId}/{id}":
    get:
      tags:
      - Categories
      summary: Get company category
      description: Get company treasury category by <code>categoryId</code>
      operationId: get_category_categories__companyId___id__get
      parameters:
      - required: true
        schema:
          title: Id
          type: string
        name: id
        in: path
      - required: true
        schema:
          title: Companyid
          type: string
        name: companyId
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GetCategoriesResponseSchema"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - HTTPBearer: []
  "/contacts/{companyId}":
    get:
      tags:
      - Contacts
      summary: List contacts
      description: List contacts
      operationId: list_contacts_contacts__companyId__get
      parameters:
      - required: true
        schema:
          title: Companyid
          type: string
        name: companyId
        in: path
      - description: Param to limit the size of the list of objects of response. Default
          500 and max value 2K
        required: false
        schema:
          title: Response length of objects limit
          maximum: 2000
          type: integer
          description: Param to limit the size of the list of objects of response.
            Default 500 and max value 2K
          default: 500
        name: limit
        in: query
      - description: Key to obtain the next N objects of your query based on the limit
          value. You can obtain nextPageToken from response to iterate over pages.
        required: false
        schema:
          title: Pagination token
          type: string
          description: Key to obtain the next N objects of your query based on the
            limit value. You can obtain nextPageToken from response to iterate over
            pages.
        name: nextPageToken
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ListContactsResponseSchema"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - HTTPBearer: []
    post:
      tags:
      - Contacts
      summary: Create contact
      description: 'Create contact with optional custom id (customId). If you dont
        set <code>customId</code>, Embat will auto-generate it. '
      operationId: create_contact_contacts__companyId__post
      parameters:
      - required: true
        schema:
          title: Companyid
          type: string
        name: companyId
        in: path
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PostContactsRequestSchema"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ModifyContactsResponseSchema"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - HTTPBearer: []
    delete:
      tags:
      - Contacts
      summary: Delete contacts bulk
      description: Delete contacts bulk by <code>customId</code>
      operationId: delete_contacts_bulk_contacts__companyId__delete
      parameters:
      - required: true
        schema:
          title: Companyid
          type: string
        name: companyId
        in: path
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/BulkDeleteContactsRequestSchema"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/BulkModifyContactsResponseSchema"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - HTTPBearer: []
    patch:
      tags:
      - Contacts
      summary: Update contacts bulk
      description: Update contacts variables by custom ids (customId)
      operationId: update_contacts_bulk_contacts__companyId__patch
      parameters:
      - required: true
        schema:
          title: Companyid
          type: string
        name: companyId
        in: path
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/BulkPatchContactsRequestSchema"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/BulkModifyContactsResponseSchema"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - HTTPBearer: []
  "/contacts/{companyId}/{customId}":
    get:
      tags:
      - Contacts
      summary: Retrieve contact
      description: Retrieve contact
      operationId: retrieve_contact_contacts__companyId___customId__get
      parameters:
      - required: true
        schema:
          title: Customid
          type: string
        name: customId
        in: path
      - required: true
        schema:
          title: Companyid
          type: string
        name: companyId
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GetContactsResponseSchema"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - HTTPBearer: []
    delete:
      tags:
      - Contacts
      summary: Delete contact
      description: Delete contact by <code>customId</code>
      operationId: delete_contact_contacts__companyId___customId__delete
      parameters:
      - required: true
        schema:
          title: Customid
          type: string
        name: customId
        in: path
      - required: true
        schema:
          title: Companyid
          type: string
        name: companyId
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ModifyContactsResponseSchema"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - HTTPBearer: []
    patch:
      tags:
      - Contacts
      summary: Update contact
      description: Update contact variables by custom id (customId)
      operationId: update_contact_contacts__companyId___customId__patch
      parameters:
      - required: true
        schema:
          title: Customid
          type: string
        name: customId
        in: path
      - required: true
        schema:
          title: Companyid
          type: string
        name: companyId
        in: path
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PatchContactsRequestSchema"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ModifyContactsResponseSchema"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - HTTPBearer: []
  "/contacts/{companyId}/bulk":
    post:
      tags:
      - Contacts
      summary: Create contacts bulk
      description: Create contacts with custom ids (customId) to make custom relationships
        or Embat will auto generate it
      operationId: create_contacts_bulk_contacts__companyId__bulk_post
      parameters:
      - required: true
        schema:
          title: Companyid
          type: string
        name: companyId
        in: path
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/BulkPostContactsRequestSchema"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/BulkModifyContactsResponseSchema"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - HTTPBearer: []
  "/forecasts/{companyId}":
    get:
      tags:
      - Forecasts
      summary: List forecasts
      description: List forecasts
      operationId: list_forecasts_forecasts__companyId__get
      parameters:
      - required: true
        schema:
          title: Companyid
          type: string
        name: companyId
        in: path
      - required: false
        schema:
          title: Scenarioid
          type: string
        name: scenarioId
        in: query
      - required: false
        schema:
          title: Sync
          type: boolean
        name: sync
        in: query
      - required: false
        schema:
          title: Operations
          type: boolean
          default: false
        name: operations
        in: query
      - required: false
        schema:
          title: Startdate
          type: string
          format: date
        name: startDate
        in: query
      - required: false
        schema:
          title: Enddate
          type: string
          format: date
        name: endDate
        in: query
      - description: Param to limit the size of the list of objects of response. Default
          500 and max value 2K
        required: false
        schema:
          title: Response length of objects limit
          maximum: 2000
          type: integer
          description: Param to limit the size of the list of objects of response.
            Default 500 and max value 2K
          default: 500
        name: limit
        in: query
      - description: Key to obtain the next N objects of your query based on the limit
          value. You can obtain nextPageToken from response to iterate over pages.
        required: false
        schema:
          title: Pagination token
          type: string
          description: Key to obtain the next N objects of your query based on the
            limit value. You can obtain nextPageToken from response to iterate over
            pages.
        name: nextPageToken
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ListForecastsResponseSchema"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - HTTPBearer: []
    patch:
      tags:
      - Forecasts
      summary: Update forecasts bulk
      description: Update forecasts variables by ids
      operationId: update_forecasts_bulk_forecasts__companyId__patch
      parameters:
      - required: true
        schema:
          title: Companyid
          type: string
        name: companyId
        in: path
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/BulkPatchForecastsRequestSchema"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/BulkModifyForecastsResponseSchema"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - HTTPBearer: []
  "/forecasts/{companyId}/{id}":
    get:
      tags:
      - Forecasts
      summary: Retrieve forecast
      description: Retrieve forecast by id
      operationId: retrieve_forecast_forecasts__companyId___id__get
      parameters:
      - required: true
        schema:
          title: Id
          type: string
        name: id
        in: path
      - required: true
        schema:
          title: Companyid
          type: string
        name: companyId
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GetForecastsResponseSchema"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - HTTPBearer: []
    patch:
      tags:
      - Forecasts
      summary: Update forecast
      description: Update forecast variables by id
      operationId: update_forecast_forecasts__companyId___id__patch
      parameters:
      - required: true
        schema:
          title: Id
          type: string
        name: id
        in: path
      - required: true
        schema:
          title: Companyid
          type: string
        name: companyId
        in: path
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PatchForecastsRequestSchema"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ModifyForecastsResponseSchema"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - HTTPBearer: []
  "/foreignexchangerates":
    get:
      tags:
      - ForeignExchangeRates
      summary: List foreign exchange rates
      description: List foreign exchange rates
      operationId: list_foreign_exchange_rates_foreignexchangerates_get
      parameters:
      - required: true
        schema:
          "$ref": "#/components/schemas/CurrencyEnum"
        name: baseCurrency
        in: query
      - required: false
        schema:
          title: Startdate
          type: string
          format: date
        name: startDate
        in: query
      - required: false
        schema:
          title: Enddate
          type: string
          format: date
        name: endDate
        in: query
      - description: Param to limit the size of the list of objects of response. Default
          500 and max value 2K
        required: false
        schema:
          title: Response length of objects limit
          maximum: 2000
          type: integer
          description: Param to limit the size of the list of objects of response.
            Default 500 and max value 2K
          default: 500
        name: limit
        in: query
      - description: Key to obtain the next N objects of your query based on the limit
          value. You can obtain nextPageToken from response to iterate over pages.
        required: false
        schema:
          title: Pagination token
          type: string
          description: Key to obtain the next N objects of your query based on the
            limit value. You can obtain nextPageToken from response to iterate over
            pages.
        name: nextPageToken
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ListForeignExchangeRatesResponseSchema"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - HTTPBearer: []
  "/foreignexchangerates/{id}":
    get:
      tags:
      - ForeignExchangeRates
      summary: Retrieve foreign exchange rate
      description: Retrieve foreign exchange rate by id
      operationId: retrieve_foreign_exchange_rate_foreignexchangerates__id__get
      parameters:
      - required: true
        schema:
          title: Id
          type: string
        name: id
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GetForeignExchangeRatesResponseSchema"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - HTTPBearer: []
  "/logs/{companyId}":
    post:
      tags:
      - Logs
      summary: Create log
      description: Create log
      operationId: create_log_logs__companyId__post
      parameters:
      - required: true
        schema:
          title: Companyid
          type: string
        name: companyId
        in: path
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PostLogRequestSchema"
        required: true
      responses:
        '204':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - HTTPBearer: []
  "/logs/{companyId}/bulk":
    post:
      tags:
      - Logs
      summary: Create logs bulk
      description: Create logs bulk
      operationId: create_logs_bulk_logs__companyId__bulk_post
      parameters:
      - required: true
        schema:
          title: Companyid
          type: string
        name: companyId
        in: path
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/BulkPostLogsRequestSchema"
        required: true
      responses:
        '204':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - HTTPBearer: []
  "/operations/{companyId}":
    get:
      tags:
      - Operations
      summary: List operations
      description: "List client operations. \n > You can use <code>status</code> and
        <code>sync</code> filter as query param"
      operationId: list_operations_operations__companyId__get
      parameters:
      - required: true
        schema:
          title: Companyid
          type: string
        name: companyId
        in: path
      - required: false
        schema:
          "$ref": "#/components/schemas/OperationStatusEnum"
        name: status
        in: query
      - description: Boolean param to filter entities processed by integrations. Control
          flag
        required: false
        schema:
          title: Sync
          type: boolean
          description: Boolean param to filter entities processed by integrations.
            Control flag
        name: sync
        in: query
      - description: YYYY-MM-DD format
        required: false
        schema:
          title: Startissuancedate
          type: string
          description: YYYY-MM-DD format
          format: date
        name: startIssuanceDate
        in: query
      - description: YYYY-MM-DD format
        required: false
        schema:
          title: Endissuancedate
          type: string
          description: YYYY-MM-DD format
          format: date
        name: endIssuanceDate
        in: query
      - description: Param to limit the size of the list of objects of response. Default
          500 and max value 2K
        required: false
        schema:
          title: Response length of objects limit
          maximum: 2000
          type: integer
          description: Param to limit the size of the list of objects of response.
            Default 500 and max value 2K
          default: 500
        name: limit
        in: query
      - description: Key to obtain the next N objects of your query based on the limit
          value. You can obtain nextPageToken from response to iterate over pages.
        required: false
        schema:
          title: Pagination token
          type: string
          description: Key to obtain the next N objects of your query based on the
            limit value. You can obtain nextPageToken from response to iterate over
            pages.
        name: nextPageToken
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ListOperationsResponseSchema"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - HTTPBearer: []
    post:
      tags:
      - Operations
      summary: Create operation
      description: Create operation with optional custom id (customId). If you dont
        set <code>customId</code>, Embat will auto-generate it
      operationId: create_operation_operations__companyId__post
      parameters:
      - required: true
        schema:
          title: Companyid
          type: string
        name: companyId
        in: path
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PostOperationsRequestSchema"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ModifyOperationsResponseSchema"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - HTTPBearer: []
    delete:
      tags:
      - Operations
      summary: Delete operations bulk
      description: Delete operations bulk by <code>customId</code>
      operationId: delete_contacts_bulk_operations__companyId__delete
      parameters:
      - required: true
        schema:
          title: Companyid
          type: string
        name: companyId
        in: path
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/BulkDeleteOperationsRequestSchema"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/BulkModifyOperationsResponseSchema"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - HTTPBearer: []
    patch:
      tags:
      - Operations
      summary: Update operations bulk
      description: Update operations variables by custom ids (customId).
      operationId: update_operations_bulk_operations__companyId__patch
      parameters:
      - required: true
        schema:
          title: Companyid
          type: string
        name: companyId
        in: path
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/BulkPatchOperationsRequestSchema"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/BulkModifyOperationsResponseSchema"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - HTTPBearer: []
  "/operations/{companyId}/{customId}":
    get:
      tags:
      - Operations
      summary: Read operation detail
      description: 'Return operation detail '
      operationId: read_operation_operations__companyId___customId__get
      parameters:
      - required: true
        schema:
          title: Customid
          type: string
        name: customId
        in: path
      - required: true
        schema:
          title: Companyid
          type: string
        name: companyId
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GetOperationsResponseSchema"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - HTTPBearer: []
    delete:
      tags:
      - Operations
      summary: Delete operation
      description: Delete operation by <code>customId</code>
      operationId: delete_contact_operations__companyId___customId__delete
      parameters:
      - required: true
        schema:
          title: Customid
          type: string
        name: customId
        in: path
      - required: true
        schema:
          title: Companyid
          type: string
        name: companyId
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ModifyOperationsResponseSchema"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - HTTPBearer: []
    patch:
      tags:
      - Operations
      summary: Update operation
      description: Update operation variables by custom id (customId)
      operationId: update_operation_operations__companyId___customId__patch
      parameters:
      - required: true
        schema:
          title: Customid
          type: string
        name: customId
        in: path
      - required: true
        schema:
          title: Companyid
          type: string
        name: companyId
        in: path
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PatchOperationsRequestSchema"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ModifyOperationsResponseSchema"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - HTTPBearer: []
  "/operations/{companyId}/bulk":
    post:
      tags:
      - Operations
      summary: Create operations bulk
      description: Create operations with custom ids (customId) to make ERP relationships
        or Embat will auto generate it
      operationId: create_operations_bulk_operations__companyId__bulk_post
      parameters:
      - required: true
        schema:
          title: Companyid
          type: string
        name: companyId
        in: path
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/BulkPostOperationsRequestSchema"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/BulkModifyOperationsResponseSchema"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - HTTPBearer: []
  "/operations/{companyId}/attributes/bulk":
    post:
      tags:
      - Operations
      summary: Add internal attributes to operations bulk
      description: Add internal attributes to operations. The attributes will not
        be synced to the ERP (only for internal use)
      operationId: add_attribute_values_operations__companyId__attributes_bulk_post
      parameters:
      - required: true
        schema:
          title: Companyid
          type: string
        name: companyId
        in: path
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/BulkPostOperationsAttributesRequestSchema"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/BulkModifyOperationsResponseSchema"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - HTTPBearer: []
    delete:
      tags:
      - Operations
      summary: Remove internal attributes from operations bulk
      description: Remove internal attributes from operations
      operationId: delete_contacts_bulk_operations__companyId__attributes_bulk_delete
      parameters:
      - required: true
        schema:
          title: Companyid
          type: string
        name: companyId
        in: path
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/BulkDeleteOperationsAttributesRequestSchema"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/BulkModifyOperationsResponseSchema"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - HTTPBearer: []
  "/payments/{companyId}":
    get:
      tags:
      - Payments
      summary: List payments
      description: List payments
      operationId: list_payments_payments__companyId__get
      parameters:
      - required: true
        schema:
          title: Companyid
          type: string
        name: companyId
        in: path
      - required: false
        schema:
          title: Productid
          type: string
        name: productId
        in: query
      - required: false
        schema:
          title: Sync
          type: boolean
        name: sync
        in: query
      - required: false
        schema:
          title: Registered
          type: boolean
        name: registered
        in: query
      - required: false
        schema:
          title: Startdate
          type: string
          format: date
        name: startDate
        in: query
      - required: false
        schema:
          title: Enddate
          type: string
          format: date
        name: endDate
        in: query
      - required: false
        schema:
          title: Startupdatedat
          type: string
          format: date-time
        name: startUpdatedAt
        in: query
      - required: false
        schema:
          title: Endupdatedat
          type: string
          format: date-time
        name: endUpdatedAt
        in: query
      - description: Param to limit the size of the list of objects of response. Default
          500 and max value 2K
        required: false
        schema:
          title: Response length of objects limit
          maximum: 2000
          type: integer
          description: Param to limit the size of the list of objects of response.
            Default 500 and max value 2K
          default: 500
        name: limit
        in: query
      - description: Key to obtain the next N objects of your query based on the limit
          value. You can obtain nextPageToken from response to iterate over pages.
        required: false
        schema:
          title: Pagination token
          type: string
          description: Key to obtain the next N objects of your query based on the
            limit value. You can obtain nextPageToken from response to iterate over
            pages.
        name: nextPageToken
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ListPaymentsResponseSchema"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - HTTPBearer: []
    post:
      tags:
      - Payments
      summary: Create payment
      description: 'Create payment with optional custom id (customId). If you dont
        set <code>customId</code>, Embat will auto-generate it. '
      operationId: create_payment_payments__companyId__post
      parameters:
      - required: true
        schema:
          title: Companyid
          type: string
        name: companyId
        in: path
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PostPaymentsRequestSchema"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ModifyPaymentsResponseSchema"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - HTTPBearer: []
    delete:
      tags:
      - Payments
      summary: Delete payments bulk
      description: Delete payments bulk by <code>customId</code>
      operationId: delete_payments_bulk_payments__companyId__delete
      parameters:
      - required: true
        schema:
          title: Companyid
          type: string
        name: companyId
        in: path
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/BulkDeletePaymentsRequestSchema"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/BulkModifyPaymentsResponseSchema"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - HTTPBearer: []
    patch:
      tags:
      - Payments
      summary: Update payments bulk
      description: Update payments variables by custom ids (customId)
      operationId: update_payments_bulk_payments__companyId__patch
      parameters:
      - required: true
        schema:
          title: Companyid
          type: string
        name: companyId
        in: path
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/BulkPatchPaymentsRequestSchema"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/BulkModifyPaymentsResponseSchema"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - HTTPBearer: []
  "/payments/{companyId}/{customId}":
    get:
      tags:
      - Payments
      summary: Retrieve payment
      description: Retrieve payment
      operationId: retrieve_payment_payments__companyId___customId__get
      parameters:
      - required: true
        schema:
          title: Customid
          type: string
        name: customId
        in: path
      - required: true
        schema:
          title: Companyid
          type: string
        name: companyId
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GetPaymentsResponseSchema"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - HTTPBearer: []
    delete:
      tags:
      - Payments
      summary: Delete payment
      description: Delete payment by <code>customId</code>
      operationId: delete_payment_payments__companyId___customId__delete
      parameters:
      - required: true
        schema:
          title: Customid
          type: string
        name: customId
        in: path
      - required: true
        schema:
          title: Companyid
          type: string
        name: companyId
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ModifyPaymentsResponseSchema"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - HTTPBearer: []
    patch:
      tags:
      - Payments
      summary: Update payment
      description: Update payment variables by custom id (customId)
      operationId: update_payment_payments__companyId___customId__patch
      parameters:
      - required: true
        schema:
          title: Customid
          type: string
        name: customId
        in: path
      - required: true
        schema:
          title: Companyid
          type: string
        name: companyId
        in: path
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PatchPaymentsRequestSchema"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ModifyPaymentsResponseSchema"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - HTTPBearer: []
  "/payments/{companyId}/bulk":
    post:
      tags:
      - Payments
      summary: Create payments bulk
      description: Create payments with custom ids (customId) to make custom relationships
        or Embat will auto generate it. You can add a <code>categoryId</code> from
        'Categories' endpoints or will be added without Embat category
      operationId: create_payments_bulk_payments__companyId__bulk_post
      parameters:
      - required: true
        schema:
          title: Companyid
          type: string
        name: companyId
        in: path
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/BulkPostPaymentsRequestSchema"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/BulkModifyPaymentsResponseSchema"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - HTTPBearer: []
  "/products/{companyId}":
    get:
      tags:
      - Products
      summary: List products
      description: List products
      operationId: list_products_products__companyId__get
      parameters:
      - required: true
        schema:
          title: Companyid
          type: string
        name: companyId
        in: path
      - required: false
        schema:
          title: Manual
          type: boolean
        name: manual
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ListProductsResponseSchema"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - HTTPBearer: []
    patch:
      tags:
      - Products
      summary: Update products bulk
      description: Update products variables by ids
      operationId: update_products_bulk_products__companyId__patch
      parameters:
      - required: true
        schema:
          title: Companyid
          type: string
        name: companyId
        in: path
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/BulkPatchProductsRequestSchema"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/BulkModifyProductsResponseSchema"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - HTTPBearer: []
  "/products/{companyId}/{id}":
    get:
      tags:
      - Products
      summary: Retrieve product
      description: Retrieve product
      operationId: retrieve_product_products__companyId___id__get
      parameters:
      - required: true
        schema:
          title: Id
          type: string
        name: id
        in: path
      - required: true
        schema:
          title: Companyid
          type: string
        name: companyId
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GetProductsResponseSchema"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - HTTPBearer: []
    patch:
      tags:
      - Products
      summary: Update product
      description: Update product variables by id
      operationId: update_product_products__companyId___id__patch
      parameters:
      - required: true
        schema:
          title: Id
          type: string
        name: id
        in: path
      - required: true
        schema:
          title: Companyid
          type: string
        name: companyId
        in: path
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PatchProductsRequestSchema"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ModifyProductsResponseSchema"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - HTTPBearer: []
  "/reconcilingitems/{companyId}":
    get:
      tags:
      - ReconcilingItems
      summary: List reconciling items
      description: List reconciling items
      operationId: list_operations_reconcilingitems__companyId__get
      parameters:
      - required: true
        schema:
          title: Companyid
          type: string
        name: companyId
        in: path
      - description: Reconciling source custom id
        required: false
        schema:
          title: Reconcilingsourcecustomid
          type: string
          description: Reconciling source custom id
        name: reconcilingSourceCustomId
        in: query
      - description: Boolean param to filter reconciled or not reconciled items
        required: false
        schema:
          title: Reconciled
          type: boolean
          description: Boolean param to filter reconciled or not reconciled items
        name: reconciled
        in: query
      - description: YYYY-MM-DD format
        required: false
        schema:
          title: Startdate
          type: string
          description: YYYY-MM-DD format
          format: date
        name: startDate
        in: query
      - description: YYYY-MM-DD format
        required: false
        schema:
          title: Enddate
          type: string
          description: YYYY-MM-DD format
          format: date
        name: endDate
        in: query
      - description: Param to limit the size of the list of objects of response. Default
          500 and max value 2K
        required: false
        schema:
          title: Response length of objects limit
          maximum: 2000
          type: integer
          description: Param to limit the size of the list of objects of response.
            Default 500 and max value 2K
          default: 500
        name: limit
        in: query
      - description: Key to obtain the next N objects of your query based on the limit
          value. You can obtain nextPageToken from response to iterate over pages.
        required: false
        schema:
          title: Pagination token
          type: string
          description: Key to obtain the next N objects of your query based on the
            limit value. You can obtain nextPageToken from response to iterate over
            pages.
        name: nextPageToken
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ListReconcilingItemsResponseSchema"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - HTTPBearer: []
    post:
      tags:
      - ReconcilingItems
      summary: Create reconciling item
      description: Create reconciling item with custom id (customId)
      operationId: create_reconciling_item_reconcilingitems__companyId__post
      parameters:
      - required: true
        schema:
          title: Companyid
          type: string
        name: companyId
        in: path
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PostReconcilingItemSchema"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ModifyReconcilingItemsResponseSchema"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - HTTPBearer: []
    delete:
      tags:
      - ReconcilingItems
      summary: Delete reconciling items bulk
      description: Delete reconciling items bulk by <code>customId</code>
      operationId: delete_reconciling_items_bulk_reconcilingitems__companyId__delete
      parameters:
      - required: true
        schema:
          title: Companyid
          type: string
        name: companyId
        in: path
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/BulkDeleteReconcilingItemsRequestSchema"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/BulkModifyReconcilingItemsResponseSchema"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - HTTPBearer: []
    patch:
      tags:
      - ReconcilingItems
      summary: Update reconciling items bulk
      description: Update reconciling items variables by custom ids (customId).
      operationId: update_reconciling_items_bulk_reconcilingitems__companyId__patch
      parameters:
      - required: true
        schema:
          title: Companyid
          type: string
        name: companyId
        in: path
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/BulkPatchReconcilingItemsRequestSchema"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/BulkModifyReconcilingItemsResponseSchema"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - HTTPBearer: []
  "/reconcilingitems/{companyId}/{customId}":
    get:
      tags:
      - ReconcilingItems
      summary: Read reconciling item detail
      description: 'Return reconciling item detail '
      operationId: read_reconciling_item_reconcilingitems__companyId___customId__get
      parameters:
      - required: true
        schema:
          title: Customid
          type: string
        name: customId
        in: path
      - required: true
        schema:
          title: Companyid
          type: string
        name: companyId
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GetReconcilingItemsResponseSchema"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - HTTPBearer: []
    delete:
      tags:
      - ReconcilingItems
      summary: Delete reconciling item
      description: Delete reconciling item by <code>customId</code>
      operationId: delete_reconciling_item_reconcilingitems__companyId___customId__delete
      parameters:
      - required: true
        schema:
          title: Customid
          type: string
        name: customId
        in: path
      - required: true
        schema:
          title: Companyid
          type: string
        name: companyId
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ModifyReconcilingItemsResponseSchema"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - HTTPBearer: []
    patch:
      tags:
      - ReconcilingItems
      summary: Update reconciling item
      description: Update reconciling item variables by custom id (customId)
      operationId: update_reconciling_item_reconcilingitems__companyId___customId__patch
      parameters:
      - required: true
        schema:
          title: Customid
          type: string
        name: customId
        in: path
      - required: true
        schema:
          title: Companyid
          type: string
        name: companyId
        in: path
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PatchReconcilingItemSchema"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ModifyReconcilingItemsResponseSchema"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - HTTPBearer: []
  "/reconcilingitems/{companyId}/bulk":
    post:
      tags:
      - ReconcilingItems
      summary: Create reconciling items bulk
      description: Create reconciling items with custom ids (customId)
      operationId: create_reconciling_items_bulk_reconcilingitems__companyId__bulk_post
      parameters:
      - required: true
        schema:
          title: Companyid
          type: string
        name: companyId
        in: path
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/BulkPostReconcilingItemsRequestSchema"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/BulkModifyReconcilingItemsResponseSchema"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - HTTPBearer: []
  "/reconcilingsources/{companyId}":
    get:
      tags:
      - ReconcilingSources
      summary: List reconciling sources
      description: List reconciling sources
      operationId: list_reconciling_sources_reconcilingsources__companyId__get
      parameters:
      - required: true
        schema:
          title: Companyid
          type: string
        name: companyId
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ListReconcilingSourcesResponseSchema"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - HTTPBearer: []
    post:
      tags:
      - ReconcilingSources
      summary: Create reconciling source
      description: Create reconciling source by custom id
      operationId: create_reconciling_source_reconcilingsources__companyId__post
      parameters:
      - required: true
        schema:
          title: Companyid
          type: string
        name: companyId
        in: path
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PostReconcilingSourceSchema"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ModifyReconcilingSourceResponseSchema"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - HTTPBearer: []
  "/reconcilingsources/{companyId}/{customId}":
    get:
      tags:
      - ReconcilingSources
      summary: Retrieve reconciling source
      description: Retrieve reconciling source
      operationId: retrieve_reconciling_source_reconcilingsources__companyId___customId__get
      parameters:
      - required: true
        schema:
          title: Customid
          type: string
        name: customId
        in: path
      - required: true
        schema:
          title: Companyid
          type: string
        name: companyId
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GetReconcilingSourceResponseSchema"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - HTTPBearer: []
    delete:
      tags:
      - ReconcilingSources
      summary: Delete reconciling source
      description: Delete reconciling source by <code>customId</code>
      operationId: delete_reconciling_source_reconcilingsources__companyId___customId__delete
      parameters:
      - required: true
        schema:
          title: Customid
          type: string
        name: customId
        in: path
      - required: true
        schema:
          title: Companyid
          type: string
        name: companyId
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ModifyReconcilingSourceResponseSchema"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - HTTPBearer: []
    patch:
      tags:
      - ReconcilingSources
      summary: Update reconciling source
      description: Update reconciling source variables by custom id (customId)
      operationId: update_reconciling_source_reconcilingsources__companyId___customId__patch
      parameters:
      - required: true
        schema:
          title: Customid
          type: string
        name: customId
        in: path
      - required: true
        schema:
          title: Companyid
          type: string
        name: companyId
        in: path
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PatchReconcilingSourceSchema"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ModifyReconcilingSourceResponseSchema"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - HTTPBearer: []
  "/scenarios/{companyId}":
    get:
      tags:
      - Scenarios
      summary: List scenarios
      description: List scenarios
      operationId: list_scenarios_scenarios__companyId__get
      parameters:
      - required: true
        schema:
          title: Companyid
          type: string
        name: companyId
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ListScenariosResponseSchema"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - HTTPBearer: []
  "/scenarios/{companyId}/{id}":
    get:
      tags:
      - Scenarios
      summary: Retrieve scenario
      description: Retrieve scenario
      operationId: retrieve_scenario_scenarios__companyId___id__get
      parameters:
      - required: true
        schema:
          title: Id
          type: string
        name: id
        in: path
      - required: true
        schema:
          title: Companyid
          type: string
        name: companyId
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GetScenarioResponseSchema"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - HTTPBearer: []
  "/transactions/{companyId}":
    get:
      tags:
      - Transactions
      summary: List transactions
      description: List transactions
      operationId: list_transactions_transactions__companyId__get
      parameters:
      - required: true
        schema:
          title: Companyid
          type: string
        name: companyId
        in: path
      - required: false
        schema:
          title: Productid
          type: string
        name: productId
        in: query
      - required: false
        schema:
          title: Sync
          type: boolean
        name: sync
        in: query
      - required: false
        schema:
          title: Startvaluedate
          type: string
          format: date
        name: startValueDate
        in: query
      - required: false
        schema:
          title: Endvaluedate
          type: string
          format: date
        name: endValueDate
        in: query
      - required: false
        schema:
          title: Startoperationdate
          type: string
          format: date
        name: startOperationDate
        in: query
      - required: false
        schema:
          title: Endoperationdate
          type: string
          format: date
        name: endOperationDate
        in: query
      - required: false
        schema:
          title: Startupdatedat
          type: string
          format: date-time
        name: startUpdatedAt
        in: query
      - required: false
        schema:
          title: Endupdatedat
          type: string
          format: date-time
        name: endUpdatedAt
        in: query
      - description: Param to limit the size of the list of objects of response. Default
          500 and max value 2K
        required: false
        schema:
          title: Response length of objects limit
          maximum: 2000
          type: integer
          description: Param to limit the size of the list of objects of response.
            Default 500 and max value 2K
          default: 500
        name: limit
        in: query
      - description: Key to obtain the next N objects of your query based on the limit
          value. You can obtain nextPageToken from response to iterate over pages.
        required: false
        schema:
          title: Pagination token
          type: string
          description: Key to obtain the next N objects of your query based on the
            limit value. You can obtain nextPageToken from response to iterate over
            pages.
        name: nextPageToken
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ListTransactionsResponseSchema"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - HTTPBearer: []
    patch:
      tags:
      - Transactions
      summary: Update transactions bulk
      description: Update transactions variables by ids
      operationId: update_transactions_bulk_transactions__companyId__patch
      parameters:
      - required: true
        schema:
          title: Companyid
          type: string
        name: companyId
        in: path
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/BulkPatchTransactionsRequestSchema"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/BulkModifyTransactionsResponseSchema"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - HTTPBearer: []
  "/transactions/{companyId}/{id}":
    get:
      tags:
      - Transactions
      summary: Retrieve transaction
      description: Retrieve transaction by id
      operationId: retrieve_transaction_transactions__companyId___id__get
      parameters:
      - required: true
        schema:
          title: Id
          type: string
        name: id
        in: path
      - required: true
        schema:
          title: Companyid
          type: string
        name: companyId
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GetTransactionsResponseSchema"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - HTTPBearer: []
    patch:
      tags:
      - Transactions
      summary: Update transaction
      description: Update transaction variables by id
      operationId: update_transaction_transactions__companyId___id__patch
      parameters:
      - required: true
        schema:
          title: Id
          type: string
        name: id
        in: path
      - required: true
        schema:
          title: Companyid
          type: string
        name: companyId
        in: path
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PatchTransactionsRequestSchema"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ModifyTransactionsResponseSchema"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - HTTPBearer: []
  "/transactions/{companyId}/{productId}/bulk":
    post:
      tags:
      - Transactions
      summary: Create manual transactions bulk
      description: |-
        >**Manual Products Only**: This endpoint is designed exclusively for products classified as "Manual". Please ensure you are working with the correct product type before proceeding. If you attempt to use this endpoint with a >non-Manual product, you will receive a <code>400 Bad Request error</code>.
        >
        >**Embat Website Functionality**: The behavior of this endpoint mirrors how manual transactions are handled on the Embat Website. When you add transactions for a day, any existing transactions for that same day are >permanently deleted and cannot be recovered.
      operationId: create_manual_transactions_bulk_transactions__companyId___productId__bulk_post
      parameters:
      - required: true
        schema:
          title: Companyid
          type: string
        name: companyId
        in: path
      - required: true
        schema:
          title: Productid
          type: string
        name: productId
        in: path
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/BulkPostTransactionsRequestSchema"
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
      - HTTPBearer: []
components:
  schemas:
    AccountTypeEnum:
      title: AccountTypeEnum
      enum:
      - CHECKING
      - SAVINGS
      type: string
      description: An enumeration.
    AccountingTypeEnum:
      title: AccountingTypeEnum
      enum:
      - banks
      - analytics
      - accountings
      type: string
      description: An enumeration.
    AttributeValueRequestACCOUNTSchema:
      title: AttributeValueRequestACCOUNTSchema
      type: object
      properties:
        customId:
          title: Customid
          type: string
        value:
          title: Value
          type: string
        valueCustomId:
          title: Valuecustomid
          type: string
    AttributeValueRequestSchema:
      title: AttributeValueRequestSchema
      required:
      - customId
      - value
      type: object
      properties:
        customId:
          title: Customid
          type: string
        value:
          title: Value
          type: string
        valueCustomId:
          title: Valuecustomid
          type: string
    AttributesRequestValuesSchema:
      title: AttributesRequestValuesSchema
      required:
      - customId
      - name
      type: object
      properties:
        customId:
          title: Customid
          type: string
        name:
          title: Name
          type: string
    AttributesResponseValuesSchema:
      title: AttributesResponseValuesSchema
      required:
      - id
      - name
      type: object
      properties:
        customId:
          title: Customid
          type: string
        id:
          title: Id
          type: string
        name:
          title: Name
          type: string
    AttributesStatusEnum:
      title: AttributesStatusEnum
      enum:
      - list
      - string
      - number
      type: string
      description: An enumeration.
    AuxBulkPatchAccountingEntriesRequestSchema:
      title: AuxBulkPatchAccountingEntriesRequestSchema
      required:
      - customId
      type: object
      properties:
        accountingCode:
          title: Accountingcode
          type: string
        counterpartAccountingCode:
          title: Counterpartaccountingcode
          type: string
          description: counterpart ledger account code
        accountingName:
          title: Accountingname
          type: string
        assetAmount:
          title: Assetamount
          type: number
        accountingAssetAmount:
          title: Accountingassetamount
          type: number
        balance:
          title: Balance
          type: number
          description: relative balance of ledger account post entry
        liabilityAmount:
          title: Liabilityamount
          type: number
        accountingLiabilityAmount:
          title: Accountingliabilityamount
          type: number
        currency:
          "$ref": "#/components/schemas/CurrencyEnum"
        accountingCurrency:
          "$ref": "#/components/schemas/CurrencyEnum"
        contactCustomId:
          title: Contactcustomid
          type: string
          description: contact custom id, when the accounting code is contacts account
        exchangeRate:
          title: Exchangerate
          type: number
        additionalInfo:
          title: Additionalinfo
          type: object
        description:
          title: Description
          type: string
        documentId:
          title: Documentid
          type: string
        transactionsIds:
          title: Transactionsids
          type: array
          items:
            type: string
        paymentId:
          title: Paymentid
          type: string
        date:
          title: Date
          type: string
          format: date-time
        attributes:
          title: Attributes
          type: array
          items:
            "$ref": "#/components/schemas/AttributeValueRequestSchema"
        customId:
          title: Customid
          type: string
          description: Embat custom/auto unique accountingEntry ID. You can use as
            your custom ERP accounting id
    AuxBulkPatchAccountingsAccountsRequestSchema:
      title: AuxBulkPatchAccountingsAccountsRequestSchema
      required:
      - accountingCode
      type: object
      properties:
        active:
          title: Active
          type: boolean
        type:
          "$ref": "#/components/schemas/AccountingTypeEnum"
        accountingName:
          title: Accountingname
          type: string
        collective:
          title: Collective
          type: boolean
          description: collective accounting account
        additionalInfo:
          title: Additionalinfo
          type: object
        attributes:
          title: Attributes
          type: array
          items:
            "$ref": "#/components/schemas/AttributeValueRequestACCOUNTSchema"
        accountingCode:
          title: Accountingcode
          type: string
    AuxBulkPatchAttributesRequestSchema:
      title: AuxBulkPatchAttributesRequestSchema
      required:
      - customId
      type: object
      properties:
        name:
          title: Name
          type: string
        active:
          title: Active
          type: boolean
          default: true
        values:
          title: Values
          type: array
          items:
            "$ref": "#/components/schemas/AttributesRequestValuesSchema"
        customId:
          title: Customid
          type: string
          description: Embat custom/auto unique attribute ID. You can use as your
            custom ERP attribute id
    AuxBulkPatchContactsRequestSchema:
      title: AuxBulkPatchContactsRequestSchema
      required:
      - customId
      type: object
      properties:
        tradeName:
          title: Tradename
          type: string
          description: contact commercial name
        legalName:
          title: Legalname
          type: string
          description: contact legal name
        taxId:
          title: Taxid
          type: string
          description: tax id CIF/NIF/VAT
        contact:
          title: Contact
          allOf:
          - "$ref": "#/components/schemas/app__schemas__contacts__ContactSchema"
          description: personal information about contact
        address:
          title: Address
          allOf:
          - "$ref": "#/components/schemas/ContactAddressSchema"
          description: address information about contact
        contactType:
          allOf:
          - "$ref": "#/components/schemas/ContactContactTypeEnum"
          description: contact type
          default: company
        type:
          allOf:
          - "$ref": "#/components/schemas/ContactTypeEnum"
          description: contact type as client/supplier
        accounts:
          title: Accounts
          type: array
          items:
            "$ref": "#/components/schemas/ContactAccounts"
          description: contact accounts
        paymentsAccounts:
          title: Paymentsaccounts
          type: array
          items:
            "$ref": "#/components/schemas/ContactNewAccount"
          description: contact payments accounts
        additionalInfo:
          title: Additionalinfo
          type: object
        accountingCode:
          title: Accountingcode
          type: string
        paymentMethod:
          title: Paymentmethod
          type: string
        paymentTerms:
          title: Paymentterms
          type: integer
          description: contact payment terms in days
        attributes:
          title: Attributes
          type: array
          items:
            "$ref": "#/components/schemas/AttributeValueRequestSchema"
        customId:
          title: Customid
          type: string
          description: Embat custom/auto unique contact ID. You can use as your custom
            ERP contact id
    AuxBulkPatchForecastsRequestSchema:
      title: AuxBulkPatchForecastsRequestSchema
      required:
      - id
      type: object
      properties:
        additionalInfo:
          title: Additionalinfo
          type: object
          default: {}
        sync:
          title: Sync
          type: boolean
        id:
          title: Id
          type: string
          description: Embat forecast ID
    AuxBulkPatchOperationsRequestSchema:
      title: AuxBulkPatchOperationsRequestSchema
      required:
      - customId
      type: object
      properties:
        status:
          "$ref": "#/components/schemas/OperationStatusEnum"
        paymentDate:
          title: Paymentdate
          type: string
          format: date-time
        chargeAccount:
          title: Chargeaccount
          type: string
          description: IBAN
        contactAccount:
          title: Contactaccount
          type: string
          description: IBAN
        issuanceDate:
          title: Issuancedate
          type: string
          format: date-time
        dueDate:
          title: Duedate
          type: string
          format: date-time
        accountingCode:
          title: Accountingcode
          type: string
        accountingName:
          title: Accountingname
          type: string
        operationsCustomIds:
          title: Operationscustomids
          type: array
          items:
            type: string
        concept:
          title: Concept
          type: string
        amount:
          title: Amount
          type: number
        accountingAmount:
          title: Accountingamount
          type: number
        currency:
          "$ref": "#/components/schemas/CurrencyEnum"
        accountingCurrency:
          "$ref": "#/components/schemas/CurrencyEnum"
        exchangeRate:
          title: Exchangerate
          type: number
        paymentMethod:
          title: Paymentmethod
          type: string
        contact:
          "$ref": "#/components/schemas/BaseContactSchema"
        additionalInfo:
          title: Additionalinfo
          type: object
        invoiceGroupDocumentId:
          title: Invoicegroupdocumentid
          type: string
        sync:
          title: Sync
          type: boolean
          default: false
        attributes:
          title: Attributes
          type: array
          items:
            "$ref": "#/components/schemas/AttributeValueRequestSchema"
        customId:
          title: Customid
          type: string
          description: Embat custom/auto unique operation ID. You can use as your
            custom ERP operation id
    AuxBulkPatchPaymentsRequestSchema:
      title: AuxBulkPatchPaymentsRequestSchema
      required:
      - customId
      type: object
      properties:
        sync:
          title: Sync
          type: boolean
        additionalInfo:
          title: Additionalinfo
          type: object
        error:
          title: Error
          type: string
        registered:
          title: Registered
          type: boolean
        customId:
          title: Customid
          type: string
          description: Embat custom/auto unique payment ID. You can use as your custom
            ERP payment id
    AuxBulkPatchProductsRequestSchema:
      title: AuxBulkPatchProductsRequestSchema
      required:
      - id
      type: object
      properties:
        additionalInfo:
          title: Additionalinfo
          type: object
          default: {}
        accountingCode:
          title: Accountingcode
          type: string
        id:
          title: Id
          type: string
          description: Embat product ID
    AuxBulkPatchReconcilingItemsRequestSchema:
      title: AuxBulkPatchReconcilingItemsRequestSchema
      required:
      - customId
      type: object
      properties:
        amount:
          title: Amount
          type: number
          description: Amount of the reconciling item
        currency:
          allOf:
          - "$ref": "#/components/schemas/CurrencyEnum"
          description: Currency of the reconciling item in ISO 4217 format
        date:
          title: Date
          type: string
          description: Date of the reconciling item
          format: date-time
        description:
          title: Description
          type: string
          description: Description of the reconciling item
        metadata:
          title: Metadata
          type: object
          description: Metadata of the reconciling item. You can use it to store any
            information you want to associate with the reconciling item.
        additionalInfo:
          title: Additionalinfo
          type: object
          description: Additional information of the reconciling item
        customId:
          title: Customid
          type: string
          description: Embat custom/auto unique reconciling item identifier. You can
            use as your internal reconciling item identifier
    AuxBulkPatchTransactionsRequestSchema:
      title: AuxBulkPatchTransactionsRequestSchema
      required:
      - id
      type: object
      properties:
        additionalInfo:
          title: Additionalinfo
          type: object
          default: {}
        attributes:
          title: Attributes
          type: array
          items:
            "$ref": "#/components/schemas/AttributeValueRequestSchema"
        sync:
          title: Sync
          type: boolean
        id:
          title: Id
          type: string
          description: Embat transaction ID
    BaseContactSchema:
      title: BaseContactSchema
      type: object
      properties:
        tradeName:
          title: Tradename
          type: string
          description: contact commercial name
        legalName:
          title: Legalname
          type: string
          description: contact legal name
        taxId:
          title: Taxid
          type: string
          description: tax id CIF/NIF/VAT
        contact:
          title: Contact
          allOf:
          - "$ref": "#/components/schemas/app__schemas__contacts__ContactSchema"
          description: personal information about contact
        address:
          title: Address
          allOf:
          - "$ref": "#/components/schemas/ContactAddressSchema"
          description: address information about contact
        contactType:
          allOf:
          - "$ref": "#/components/schemas/ContactContactTypeEnum"
          description: contact type
          default: company
        type:
          allOf:
          - "$ref": "#/components/schemas/ContactTypeEnum"
          description: contact type as client/supplier
        accounts:
          title: Accounts
          type: array
          items:
            "$ref": "#/components/schemas/ContactAccounts"
          description: contact accounts
        paymentsAccounts:
          title: Paymentsaccounts
          type: array
          items:
            "$ref": "#/components/schemas/ContactNewAccount"
          description: contact payments accounts
        additionalInfo:
          title: Additionalinfo
          type: object
        accountingCode:
          title: Accountingcode
          type: string
        paymentMethod:
          title: Paymentmethod
          type: string
        paymentTerms:
          title: Paymentterms
          type: integer
          description: contact payment terms in days
        attributes:
          title: Attributes
          type: array
          items:
            "$ref": "#/components/schemas/AttributeValueRequestSchema"
        customId:
          title: Customid
          type: string
          description: Embat custom/auto unique contact ID. You can use as your custom
            ERP contact id
    BulkDeleteAccountingEntriesEntryCodeRequestSchema:
      title: BulkDeleteAccountingEntriesEntryCodeRequestSchema
      required:
      - data
      type: object
      properties:
        data:
          title: Data
          type: array
          items:
            "$ref": "#/components/schemas/DeleteAccountingEntriesEntryCodeRequestSchema"
    BulkDeleteAccountingEntriesRequestSchema:
      title: BulkDeleteAccountingEntriesRequestSchema
      required:
      - data
      type: object
      properties:
        data:
          title: Data
          type: array
          items:
            "$ref": "#/components/schemas/DeleteAccountingEntriesRequestSchema"
    BulkDeleteAccountingsAccountsRequestSchema:
      title: BulkDeleteAccountingsAccountsRequestSchema
      required:
      - data
      type: object
      properties:
        data:
          title: Data
          type: array
          items:
            "$ref": "#/components/schemas/DeleteAccountingsAccountsRequestSchema"
    BulkDeleteAttributesRequestSchema:
      title: BulkDeleteAttributesRequestSchema
      required:
      - data
      type: object
      properties:
        data:
          title: Data
          type: array
          items:
            "$ref": "#/components/schemas/DeleteAttributesRequestSchema"
    BulkDeleteContactsRequestSchema:
      title: BulkDeleteContactsRequestSchema
      required:
      - data
      type: object
      properties:
        data:
          title: Data
          type: array
          items:
            "$ref": "#/components/schemas/DeleteContactsRequestSchema"
    BulkDeleteOperationsAttributesRequestSchema:
      title: BulkDeleteOperationsAttributesRequestSchema
      required:
      - data
      type: object
      properties:
        data:
          title: Data
          type: array
          items:
            "$ref": "#/components/schemas/DeleteOperationsAttributesRequestSchema"
    BulkDeleteOperationsRequestSchema:
      title: BulkDeleteOperationsRequestSchema
      required:
      - data
      type: object
      properties:
        data:
          title: Data
          type: array
          items:
            "$ref": "#/components/schemas/DeleteOperationsRequestSchema"
    BulkDeletePaymentsRequestSchema:
      title: BulkDeletePaymentsRequestSchema
      required:
      - data
      type: object
      properties:
        data:
          title: Data
          type: array
          items:
            "$ref": "#/components/schemas/DeletePaymentsRequestSchema"
    BulkDeleteReconcilingItemsRequestSchema:
      title: BulkDeleteReconcilingItemsRequestSchema
      required:
      - data
      type: object
      properties:
        data:
          title: Data
          type: array
          items:
            "$ref": "#/components/schemas/DeleteReconcilingItemsRequestSchema"
    BulkModifyAccountingEntriesResponseSchema:
      title: BulkModifyAccountingEntriesResponseSchema
      required:
      - data
      type: object
      properties:
        data:
          title: Data
          type: array
          items:
            "$ref": "#/components/schemas/ModifyAccountingEntriesResponseSchema"
    BulkModifyAccountingsAccountsResponseSchema:
      title: BulkModifyAccountingsAccountsResponseSchema
      required:
      - data
      type: object
      properties:
        data:
          title: Data
          type: array
          items:
            "$ref": "#/components/schemas/ModifyAccountingsAccountsResponseSchema"
    BulkModifyAttributesResponseSchema:
      title: BulkModifyAttributesResponseSchema
      required:
      - data
      type: object
      properties:
        data:
          title: Data
          type: array
          items:
            "$ref": "#/components/schemas/ModifyAttributesResponseSchema"
    BulkModifyContactsResponseSchema:
      title: BulkModifyContactsResponseSchema
      required:
      - data
      type: object
      properties:
        data:
          title: Data
          type: array
          items:
            "$ref": "#/components/schemas/ModifyContactsResponseSchema"
    BulkModifyForecastsResponseSchema:
      title: BulkModifyForecastsResponseSchema
      required:
      - data
      type: object
      properties:
        data:
          title: Data
          type: array
          items:
            "$ref": "#/components/schemas/ModifyForecastsResponseSchema"
    BulkModifyOperationsResponseSchema:
      title: BulkModifyOperationsResponseSchema
      required:
      - data
      type: object
      properties:
        data:
          title: Data
          type: array
          items:
            "$ref": "#/components/schemas/ModifyOperationsResponseSchema"
    BulkModifyPaymentsResponseSchema:
      title: BulkModifyPaymentsResponseSchema
      required:
      - data
      type: object
      properties:
        data:
          title: Data
          type: array
          items:
            "$ref": "#/components/schemas/ModifyPaymentsResponseSchema"
    BulkModifyProductsResponseSchema:
      title: BulkModifyProductsResponseSchema
      required:
      - data
      type: object
      properties:
        data:
          title: Data
          type: array
          items:
            "$ref": "#/components/schemas/ModifyProductsResponseSchema"
    BulkModifyReconcilingItemsResponseSchema:
      title: BulkModifyReconcilingItemsResponseSchema
      required:
      - data
      type: object
      properties:
        data:
          title: Data
          type: array
          items:
            "$ref": "#/components/schemas/ModifyReconcilingItemsResponseSchema"
    BulkModifyTransactionsResponseSchema:
      title: BulkModifyTransactionsResponseSchema
      required:
      - data
      type: object
      properties:
        data:
          title: Data
          type: array
          items:
            "$ref": "#/components/schemas/ModifyTransactionsResponseSchema"
    BulkPatchAccountingEntriesRequestSchema:
      title: BulkPatchAccountingEntriesRequestSchema
      required:
      - data
      type: object
      properties:
        data:
          title: Data
          type: array
          items:
            "$ref": "#/components/schemas/AuxBulkPatchAccountingEntriesRequestSchema"
    BulkPatchAccountingsAccountsRequestSchema:
      title: BulkPatchAccountingsAccountsRequestSchema
      required:
      - data
      type: object
      properties:
        data:
          title: Data
          type: array
          items:
            "$ref": "#/components/schemas/AuxBulkPatchAccountingsAccountsRequestSchema"
    BulkPatchAttributesRequestSchema:
      title: BulkPatchAttributesRequestSchema
      required:
      - data
      type: object
      properties:
        data:
          title: Data
          type: array
          items:
            "$ref": "#/components/schemas/AuxBulkPatchAttributesRequestSchema"
    BulkPatchContactsRequestSchema:
      title: BulkPatchContactsRequestSchema
      required:
      - data
      type: object
      properties:
        data:
          title: Data
          type: array
          items:
            "$ref": "#/components/schemas/AuxBulkPatchContactsRequestSchema"
    BulkPatchForecastsRequestSchema:
      title: BulkPatchForecastsRequestSchema
      required:
      - data
      type: object
      properties:
        data:
          title: Data
          type: array
          items:
            "$ref": "#/components/schemas/AuxBulkPatchForecastsRequestSchema"
    BulkPatchOperationsRequestSchema:
      title: BulkPatchOperationsRequestSchema
      required:
      - data
      type: object
      properties:
        data:
          title: Data
          type: array
          items:
            "$ref": "#/components/schemas/AuxBulkPatchOperationsRequestSchema"
    BulkPatchPaymentsRequestSchema:
      title: BulkPatchPaymentsRequestSchema
      required:
      - data
      type: object
      properties:
        data:
          title: Data
          type: array
          items:
            "$ref": "#/components/schemas/AuxBulkPatchPaymentsRequestSchema"
    BulkPatchProductsRequestSchema:
      title: BulkPatchProductsRequestSchema
      required:
      - data
      type: object
      properties:
        data:
          title: Data
          type: array
          items:
            "$ref": "#/components/schemas/AuxBulkPatchProductsRequestSchema"
    BulkPatchReconcilingItemsRequestSchema:
      title: BulkPatchReconcilingItemsRequestSchema
      required:
      - data
      type: object
      properties:
        data:
          title: Data
          type: array
          items:
            "$ref": "#/components/schemas/AuxBulkPatchReconcilingItemsRequestSchema"
    BulkPatchTransactionsRequestSchema:
      title: BulkPatchTransactionsRequestSchema
      required:
      - data
      type: object
      properties:
        data:
          title: Data
          type: array
          items:
            "$ref": "#/components/schemas/AuxBulkPatchTransactionsRequestSchema"
    BulkPostAccountingEntriesRequestSchema:
      title: BulkPostAccountingEntriesRequestSchema
      required:
      - data
      type: object
      properties:
        data:
          title: Data
          type: array
          items:
            "$ref": "#/components/schemas/PostAccountingEntriesRequestSchema"
    BulkPostAccountingsAccountsRequestSchema:
      title: BulkPostAccountingsAccountsRequestSchema
      required:
      - data
      type: object
      properties:
        data:
          title: Data
          type: array
          items:
            "$ref": "#/components/schemas/PostAccountingsAccountsRequestSchema"
    BulkPostAttributesRequestSchema:
      title: BulkPostAttributesRequestSchema
      required:
      - data
      type: object
      properties:
        data:
          title: Data
          type: array
          items:
            "$ref": "#/components/schemas/PostAttributesRequestSchema"
    BulkPostAttributesValuesRequestSchema:
      title: BulkPostAttributesValuesRequestSchema
      required:
      - data
      type: object
      properties:
        data:
          title: Data
          type: array
          items:
            "$ref": "#/components/schemas/AttributesRequestValuesSchema"
    BulkPostContactsRequestSchema:
      title: BulkPostContactsRequestSchema
      required:
      - data
      type: object
      properties:
        data:
          title: Data
          type: array
          items:
            "$ref": "#/components/schemas/PostContactsRequestSchema"
    BulkPostLogsRequestSchema:
      title: BulkPostLogsRequestSchema
      required:
      - data
      type: object
      properties:
        data:
          title: Data
          type: array
          items:
            "$ref": "#/components/schemas/PostLogRequestSchema"
    BulkPostOperationsAttributesRequestSchema:
      title: BulkPostOperationsAttributesRequestSchema
      required:
      - data
      type: object
      properties:
        data:
          title: Data
          type: array
          items:
            "$ref": "#/components/schemas/PostOperationsAttributesRequestSchema"
    BulkPostOperationsRequestSchema:
      title: BulkPostOperationsRequestSchema
      required:
      - data
      type: object
      properties:
        data:
          title: Data
          type: array
          items:
            "$ref": "#/components/schemas/PostOperationsRequestSchema"
    BulkPostPaymentsRequestSchema:
      title: BulkPostPaymentsRequestSchema
      required:
      - data
      type: object
      properties:
        data:
          title: Data
          type: array
          items:
            "$ref": "#/components/schemas/PostPaymentsRequestSchema"
    BulkPostReconcilingItemsRequestSchema:
      title: BulkPostReconcilingItemsRequestSchema
      required:
      - data
      type: object
      properties:
        data:
          title: Data
          type: array
          items:
            "$ref": "#/components/schemas/PostReconcilingItemSchema"
    BulkPostTransactionsRequestSchema:
      title: BulkPostTransactionsRequestSchema
      required:
      - data
      type: object
      properties:
        data:
          title: Data
          type: array
          items:
            "$ref": "#/components/schemas/PostTransactionsRequestSchema"
    CompanyConfigSchema:
      title: CompanyConfigSchema
      type: object
      properties:
        currency:
          allOf:
          - "$ref": "#/components/schemas/CurrencyEnum"
          description: Company currency, default EUR if not set
          default: EUR
    CompanyResponseSchema:
      title: CompanyResponseSchema
      required:
      - id
      - legalName
      type: object
      properties:
        id:
          title: Id
          type: string
          description: Embat company ID
        legalName:
          title: Legalname
          type: string
          description: Company legal name
        updatedAt:
          title: Updatedat
          type: string
          description: Last updated date of the entity in the database
          format: date-time
        createdAt:
          title: Createdat
          type: string
          description: Created date of the entity in the database
          format: date-time
        contact:
          title: Contact
          allOf:
          - "$ref": "#/components/schemas/app__schemas__companies__ContactSchema"
          description: Company contact as admin
        tags:
          title: Tags
          type: array
          items:
            "$ref": "#/components/schemas/TagsSchema"
        config:
          "$ref": "#/components/schemas/CompanyConfigSchema"
    CompanyUserSchema:
      title: CompanyUserSchema
      required:
      - id
      - email
      type: object
      properties:
        id:
          title: Id
          type: string
          description: Embat user ID
        email:
          title: Email
          type: string
          description: user email
        updatedAt:
          title: Updatedat
          type: string
          description: Last updated date of the entity in the database
          format: date-time
        createdAt:
          title: Createdat
          type: string
          description: Created date of the entity in the database
          format: date-time
        name:
          title: Name
          type: string
        surname:
          title: Surname
          type: string
    ContactAccounts:
      title: ContactAccounts
      type: object
      properties:
        swift:
          title: Swift
          type: string
        iban:
          title: Iban
          type: string
        default:
          title: Default
          type: boolean
    ContactAddressSchema:
      title: ContactAddressSchema
      type: object
      properties:
        postalCode:
          title: Postalcode
          type: string
          description: "(SOMETIMES Required for all currencies payments using SEPA/SWIFT/ACH/Fedwire/SWIFT/BACS/CHAPS/Faster/EFT)
            Postal code"
        address:
          title: Address
          type: string
          description: "(SOMETIMES Required for all currencies payments using SEPA/SWIFT/ACH/Fedwire/SWIFT/BACS/CHAPS/Faster/EFT)
            Complete address with street type, street name, number, flat..."
        province:
          title: Province
          type: string
          description: "(SOMETIMES Required for all currencies payments using SEPA/SWIFT/ACH/Fedwire/SWIFT/BACS/CHAPS/Faster/EFT)
            Province, state, region..."
        city:
          title: City
          type: string
          description: "(SOMETIMES Required for all currencies payments using SEPA/SWIFT/ACH/Fedwire/SWIFT/BACS/CHAPS/Faster/EFT)
            City"
        country:
          title: Country
          type: string
          description: "(SOMETIMES Required for all currencies payments using SEPA/SWIFT/ACH/Fedwire/SWIFT/BACS/CHAPS/Faster/EFT)
            City"
    ContactContactTypeEnum:
      title: ContactContactTypeEnum
      enum:
      - freelance
      - company
      type: string
      description: An enumeration.
    ContactNewAccount:
      title: ContactNewAccount
      type: object
      properties:
        default:
          title: Default
          type: boolean
          default: false
        currency:
          "$ref": "#/components/schemas/CurrencyEnum"
        details:
          "$ref": "#/components/schemas/ContactNewAccountDetails"
    ContactNewAccountDetails:
      title: ContactNewAccountDetails
      type: object
      properties:
        iban:
          title: Iban
          type: string
          description: "(Required for EUR payments using SEPA) International Bank
            Account Number"
        bic:
          title: Bic
          type: string
          description: "(Required for all currencies payments using SWIFT) Bank Identifier
            Code"
        accountNumber:
          title: Accountnumber
          type: string
          description: "(Required for USD/CAD/GBP payments using ACH/Fedwire/EFT/BACS/CHAPS/Faster)
            Account number"
        accountType:
          allOf:
          - "$ref": "#/components/schemas/AccountTypeEnum"
          description: "(Required for USD/CAD payments using ACH/EFT) Account type"
        routingNumber:
          title: Routingnumber
          type: string
          description: "(Required for USD payments using ACH/Fedwire) Routing number"
        sortCode:
          title: Sortcode
          type: string
          description: "(Required for GBP payments using BACS/CHAPS/Faster) Sort code"
        institutionNumber:
          title: Institutionnumber
          type: string
          description: "(Required for CAD payments using EFT) Institution number"
        transitNumber:
          title: Transitnumber
          type: string
          description: "(Required for CAD payments using EFT) Transit number"
    ContactTypeEnum:
      title: ContactTypeEnum
      enum:
      - supplier
      - client-supplier
      - client
      type: string
      description: An enumeration.
    CurrencyEnum:
      title: CurrencyEnum
      enum:
      - AED
      - AFN
      - ALL
      - AMD
      - ANG
      - AOA
      - ARS
      - AUD
      - AWG
      - AZN
      - BAM
      - BBD
      - BDT
      - BGN
      - BHD
      - BIF
      - BMD
      - BND
      - BOB
      - BOV
      - BRL
      - BSD
      - BTC
      - BTN
      - BWP
      - BYN
      - BZD
      - CAD
      - CDF
      - CHE
      - CHF
      - CHW
      - CLF
      - CLP
      - CNY
      - COP
      - COU
      - CRC
      - CUP
      - CVE
      - CZK
      - DJF
      - DKK
      - DOP
      - DZD
      - EEK
      - EGP
      - ERN
      - ETB
      - ETH
      - EUR
      - FJD
      - FKP
      - GBP
      - GEL
      - GHS
      - GIP
      - GMD
      - GNF
      - GTQ
      - GYD
      - HKD
      - HNL
      - HRK
      - HTG
      - HUF
      - IDR
      - ILS
      - INR
      - IQD
      - IRR
      - ISK
      - JMD
      - JOD
      - JPY
      - KES
      - KGS
      - KHR
      - KMF
      - KPW
      - KRW
      - KWD
      - KYD
      - KZT
      - LAK
      - LBP
      - LKR
      - LRD
      - LSL
      - LTC
      - LTL
      - LVL
      - LYD
      - MAD
      - MDL
      - MGA
      - MKD
      - MMK
      - MNT
      - MOP
      - MRU
      - MUR
      - MVR
      - MWK
      - MXN
      - MXV
      - MYR
      - MZN
      - NAD
      - NGN
      - NIO
      - NOK
      - NPR
      - NZD
      - OMR
      - PAB
      - PEN
      - PGK
      - PHP
      - PKR
      - PLN
      - PYG
      - QAR
      - RON
      - RSD
      - RUB
      - RWF
      - SAR
      - SBD
      - SCR
      - SDG
      - SEK
      - SGD
      - SHP
      - SLE
      - SOS
      - SRD
      - SSP
      - STN
      - SVC
      - SYP
      - SZL
      - THB
      - TJS
      - TMT
      - TND
      - TOP
      - TRY
      - TTD
      - TWD
      - TZS
      - UAH
      - UGX
      - USD
      - USN
      - UYI
      - UYU
      - UYW
      - UZS
      - VED
      - VEF
      - VES
      - VND
      - VUV
      - WST
      - XAF
      - XAG
      - XAU
      - XBA
      - XBB
      - XBC
      - XBD
      - XCD
      - XDR
      - XOF
      - XPD
      - XPF
      - XPT
      - XSU
      - XTS
      - XUA
      - XXX
      - YER
      - ZAR
      - ZMK
      - ZMW
      - ZWG
      - ZWL
      type: string
      description: An enumeration.
    DeleteAccountingEntriesEntryCodeRequestSchema:
      title: DeleteAccountingEntriesEntryCodeRequestSchema
      required:
      - accountingEntryCode
      type: object
      properties:
        accountingEntryCode:
          title: Accountingentrycode
          type: string
    DeleteAccountingEntriesRequestSchema:
      title: DeleteAccountingEntriesRequestSchema
      required:
      - customId
      type: object
      properties:
        customId:
          title: Customid
          type: string
    DeleteAccountingsAccountsRequestSchema:
      title: DeleteAccountingsAccountsRequestSchema
      required:
      - accountingCode
      type: object
      properties:
        accountingCode:
          title: Accountingcode
          type: string
    DeleteAttributesRequestSchema:
      title: DeleteAttributesRequestSchema
      required:
      - customId
      type: object
      properties:
        customId:
          title: Customid
          type: string
    DeleteContactsRequestSchema:
      title: DeleteContactsRequestSchema
      required:
      - customId
      type: object
      properties:
        customId:
          title: Customid
          type: string
    DeleteOperationsAttributesRequestSchema:
      title: DeleteOperationsAttributesRequestSchema
      required:
      - customId
      - attributesCustomIds
      type: object
      properties:
        customId:
          title: Customid
          type: string
        attributesCustomIds:
          title: Attributescustomids
          type: array
          items:
            type: string
    DeleteOperationsRequestSchema:
      title: DeleteOperationsRequestSchema
      required:
      - customId
      type: object
      properties:
        customId:
          title: Customid
          type: string
    DeletePaymentsRequestSchema:
      title: DeletePaymentsRequestSchema
      required:
      - customId
      type: object
      properties:
        customId:
          title: Customid
          type: string
    DeleteReconcilingItemsRequestSchema:
      title: DeleteReconcilingItemsRequestSchema
      required:
      - customId
      type: object
      properties:
        customId:
          title: Customid
          type: string
          description: Embat custom/auto unique reconciling item identifier. You can
            use as your internal reconciling item identifier
    ErspEnum:
      title: ErspEnum
      enum:
      - netsuite
      - sageX3
      - odoo
      - businessCentral
      - navision
      - libra
      - distritoK
      - fo
      - zoho
      - holded
      - dynamicsAx
      - a3
      - businessOne
      - openbravo
      - sage200
      - sage50
      - r3
      - ekon
      - m3Rosetta
      type: string
      description: An enumeration.
    GetAccountingEntriesResponseSchema:
      title: GetAccountingEntriesResponseSchema
      required:
      - accountingCode
      - assetAmount
      - liabilityAmount
      - date
      - id
      - companyId
      - updatedAt
      - createdAt
      type: object
      properties:
        accountingCode:
          title: Accountingcode
          minLength: 1
          type: string
        counterpartAccountingCode:
          title: Counterpartaccountingcode
          type: string
          description: counterpart ledger account code
        accountingName:
          title: Accountingname
          type: string
        assetAmount:
          title: Assetamount
          type: number
        accountingAssetAmount:
          title: Accountingassetamount
          type: number
        balance:
          title: Balance
          type: number
          description: relative balance of ledger account post entry
        liabilityAmount:
          title: Liabilityamount
          type: number
        accountingLiabilityAmount:
          title: Accountingliabilityamount
          type: number
        currency:
          "$ref": "#/components/schemas/CurrencyEnum"
        accountingCurrency:
          "$ref": "#/components/schemas/CurrencyEnum"
        contactCustomId:
          title: Contactcustomid
          type: string
          description: contact custom id, when the accounting code is contacts account
        exchangeRate:
          title: Exchangerate
          type: number
        additionalInfo:
          title: Additionalinfo
          type: object
        description:
          title: Description
          type: string
        documentId:
          title: Documentid
          type: string
        transactionsIds:
          title: Transactionsids
          type: array
          items:
            type: string
        paymentId:
          title: Paymentid
          type: string
        date:
          title: Date
          type: string
          format: date-time
        attributes:
          title: Attributes
          type: array
          items:
            "$ref": "#/components/schemas/AttributeValueRequestSchema"
        customId:
          title: Customid
          type: string
          description: Embat custom/auto unique accountingEntry ID. You can use as
            your custom ERP accounting entry id
        type:
          "$ref": "#/components/schemas/AccountingTypeEnum"
        accountingEntryCode:
          title: Accountingentrycode
          type: string
        accountingEntryCodeId:
          title: Accountingentrycodeid
          type: string
        id:
          title: Id
          type: string
          description: Embat accountingEntry ID
        companyId:
          title: Companyid
          type: string
          description: Embat company ID. You can get them from "companies" endpoints
        updatedAt:
          title: Updatedat
          type: string
          description: Last updated date of the entity in the database
          format: date-time
        createdAt:
          title: Createdat
          type: string
          description: Created date of the entity in the database
          format: date-time
        reconciled:
          title: Reconciled
          type: boolean
          default: false
    GetAccountingsAccountsResponseSchema:
      title: GetAccountingsAccountsResponseSchema
      required:
      - accountingCode
      - companyId
      - updatedAt
      - createdAt
      type: object
      properties:
        active:
          title: Active
          type: boolean
        type:
          "$ref": "#/components/schemas/AccountingTypeEnum"
        accountingName:
          title: Accountingname
          type: string
        collective:
          title: Collective
          type: boolean
          description: collective accounting account
        additionalInfo:
          title: Additionalinfo
          type: object
        attributes:
          title: Attributes
          type: array
          items:
            "$ref": "#/components/schemas/AttributeValueRequestACCOUNTSchema"
        accountingCode:
          title: Accountingcode
          type: string
        companyId:
          title: Companyid
          type: string
          description: Embat company ID. You can get them from "companies" endpoints
        updatedAt:
          title: Updatedat
          type: string
          description: Last updated date of the entity in the database
          format: date-time
        createdAt:
          title: Createdat
          type: string
          description: Created date of the entity in the database
          format: date-time
        balance:
          title: Balance
          type: number
          description: Accounting account balance
        balanceDate:
          title: Balancedate
          type: string
          description: Last updated date of the accounting account balance
          format: date-time
    GetAttributesResponseSchema:
      title: GetAttributesResponseSchema
      required:
      - name
      - id
      - createdAt
      - updatedAt
      - companyId
      type: object
      properties:
        customId:
          title: Customid
          type: string
        source:
          "$ref": "#/components/schemas/SourceEnum"
        active:
          title: Active
          type: boolean
          default: true
        name:
          title: Name
          type: string
        type:
          "$ref": "#/components/schemas/AttributesStatusEnum"
        required:
          title: Required
          type: boolean
          default: false
        values:
          title: Values
          type: array
          items:
            "$ref": "#/components/schemas/AttributesResponseValuesSchema"
        id:
          title: Id
          type: string
          description: Embat attribute ID
        createdAt:
          title: Createdat
          type: string
          format: date-time
        updatedAt:
          title: Updatedat
          type: string
          format: date-time
        companyId:
          title: Companyid
          type: string
          description: Embat company ID. You can get them from "companies" endpoints
    GetBalancesResponseSchema:
      title: GetBalancesResponseSchema
      type: object
      properties:
        id:
          title: Id
          type: string
        balance:
          title: Balance
          type: number
        date:
          title: Date
          type: string
          format: date-time
        companyId:
          title: Companyid
          type: string
        product:
          "$ref": "#/components/schemas/ProductBaseSchema"
        accountingCurrency:
          "$ref": "#/components/schemas/CurrencyEnum"
        accountingBalance:
          title: Accountingbalance
          type: number
        exchangeRate:
          title: Exchangerate
          type: number
    GetBanksResponseSchema:
      title: GetBanksResponseSchema
      required:
      - id
      - bankService
      - companyId
      - bankProducts
      type: object
      properties:
        id:
          title: Id
          type: string
        bankService:
          title: Bankservice
          type: string
        bankFullName:
          title: Bankfullname
          type: string
        lastAggregationOK:
          title: Lastaggregationok
          type: string
          format: date-time
        updatedAt:
          title: Updatedat
          type: string
          format: date-time
        createdAt:
          title: Createdat
          type: string
          format: date-time
        companyId:
          title: Companyid
          type: string
        bankProducts:
          title: Bankproducts
          type: array
          items:
            "$ref": "#/components/schemas/ProductSchema"
        additionalInfo:
          title: Additionalinfo
          type: object
          default: {}
      description: Banks response data schema
    GetCategoriesResponseSchema:
      title: GetCategoriesResponseSchema
      required:
      - id
      - companyId
      - updatedAt
      - createdAt
      - name
      type: object
      properties:
        id:
          title: Id
          type: string
          description: Embat category ID to transactions, forecasts, invoices...Categories
            to split treasury or cashflows
        companyId:
          title: Companyid
          type: string
          description: Embat company ID. You can get them from "companies" endpoints
        updatedAt:
          title: Updatedat
          type: string
          description: Last updated date of the entity in the database
          format: date-time
        createdAt:
          title: Createdat
          type: string
          description: Created date of the entity in the database
          format: date-time
        name:
          title: Name
          type: string
          description: Embat category name
        parentId:
          title: Parentid
          type: string
          description: Parent category ID. If the category is a child category, you
            will see the parent category ID
      description: Category response data schema
    GetContactsResponseSchema:
      title: GetContactsResponseSchema
      required:
      - type
      - id
      - companyId
      - updatedAt
      - createdAt
      type: object
      properties:
        tradeName:
          title: Tradename
          type: string
          description: contact commercial name
        legalName:
          title: Legalname
          type: string
          description: contact legal name
        taxId:
          title: Taxid
          type: string
          description: tax id CIF/NIF/VAT
        contact:
          title: Contact
          allOf:
          - "$ref": "#/components/schemas/app__schemas__contacts__ContactSchema"
          description: personal information about contact
        address:
          title: Address
          allOf:
          - "$ref": "#/components/schemas/ContactAddressSchema"
          description: address information about contact
        contactType:
          allOf:
          - "$ref": "#/components/schemas/ContactContactTypeEnum"
          description: contact type
          default: company
        type:
          allOf:
          - "$ref": "#/components/schemas/ContactTypeEnum"
          description: contact type as client/supplier
        accounts:
          title: Accounts
          type: array
          items:
            "$ref": "#/components/schemas/ContactAccounts"
          description: contact accounts
        paymentsAccounts:
          title: Paymentsaccounts
          type: array
          items:
            "$ref": "#/components/schemas/ContactNewAccount"
          description: contact payments accounts
        additionalInfo:
          title: Additionalinfo
          type: object
        accountingCode:
          title: Accountingcode
          type: string
        paymentMethod:
          title: Paymentmethod
          type: string
        paymentTerms:
          title: Paymentterms
          type: integer
          description: contact payment terms in days
        attributes:
          title: Attributes
          type: array
          items:
            "$ref": "#/components/schemas/AttributeValueRequestSchema"
        customId:
          title: Customid
          type: string
          description: Embat custom/auto unique contact ID. You can use as your custom
            ERP contact id
        id:
          title: Id
          type: string
          description: Embat contact ID
        companyId:
          title: Companyid
          type: string
          description: Embat company ID. You can get them from "companies" endpoints
        updatedAt:
          title: Updatedat
          type: string
          description: Last updated date of the entity in the database
          format: date-time
        createdAt:
          title: Createdat
          type: string
          description: Created date of the entity in the database
          format: date-time
    GetForecastsResponseSchema:
      title: GetForecastsResponseSchema
      type: object
      properties:
        id:
          title: Id
          type: string
        companyId:
          title: Companyid
          type: string
        amount:
          title: Amount
          type: number
        accountingAmount:
          title: Accountingamount
          type: number
        accountingCurrency:
          "$ref": "#/components/schemas/CurrencyEnum"
        exchangeRate:
          title: Exchangerate
          type: number
        date:
          title: Date
          type: string
          format: date-time
        createdAt:
          title: Createdat
          type: string
          format: date-time
        updatedAt:
          title: Updatedat
          type: string
          format: date-time
        categoryId:
          title: Categoryid
          type: string
        scenario:
          "$ref": "#/components/schemas/ScenarioSchema"
      description: Forecasts response data schema
    GetForeignExchangeRatesResponseSchema:
      title: GetForeignExchangeRatesResponseSchema
      required:
      - id
      - baseCurrency
      - date
      - createdAt
      - updatedAt
      - rates
      type: object
      properties:
        id:
          title: Id
          type: string
          description: Foreign exchange rate id
        baseCurrency:
          allOf:
          - "$ref": "#/components/schemas/CurrencyEnum"
          description: Base currency
        date:
          title: Date
          type: string
          description: Date of the exchange rate
          format: date-time
        createdAt:
          title: Createdat
          type: string
          description: Created date of the entity in the database
          format: date-time
        updatedAt:
          title: Updatedat
          type: string
          description: Last updated date of the entity in the database
          format: date-time
        rates:
          title: Rates
          type: object
          description: Exchange rates
      description: Foreign exchange rates response data schema
    GetOperationsResponseSchema:
      title: GetOperationsResponseSchema
      required:
      - issuanceDate
      - dueDate
      - concept
      - amount
      - id
      - companyId
      type: object
      properties:
        status:
          "$ref": "#/components/schemas/OperationStatusEnum"
        paymentDate:
          title: Paymentdate
          type: string
          format: date-time
        chargeAccount:
          title: Chargeaccount
          type: string
          description: IBAN
        contactAccount:
          title: Contactaccount
          type: string
          description: IBAN
        issuanceDate:
          title: Issuancedate
          type: string
          format: date-time
        dueDate:
          title: Duedate
          type: string
          format: date-time
        accountingCode:
          title: Accountingcode
          type: string
        accountingName:
          title: Accountingname
          type: string
        operationsCustomIds:
          title: Operationscustomids
          type: array
          items:
            type: string
        concept:
          title: Concept
          type: string
        amount:
          title: Amount
          type: number
        accountingAmount:
          title: Accountingamount
          type: number
        currency:
          "$ref": "#/components/schemas/CurrencyEnum"
        accountingCurrency:
          "$ref": "#/components/schemas/CurrencyEnum"
        exchangeRate:
          title: Exchangerate
          type: number
        paymentMethod:
          title: Paymentmethod
          type: string
        contact:
          "$ref": "#/components/schemas/BaseContactSchema"
        additionalInfo:
          title: Additionalinfo
          type: object
        invoiceGroupDocumentId:
          title: Invoicegroupdocumentid
          type: string
        sync:
          title: Sync
          type: boolean
          default: false
        attributes:
          title: Attributes
          type: array
          items:
            "$ref": "#/components/schemas/AttributeValueRequestSchema"
        customId:
          title: Customid
          type: string
        pendingAmount:
          title: Pendingamount
          type: number
        pendingAccountingAmount:
          title: Pendingaccountingamount
          type: number
        documentId:
          title: Documentid
          type: string
        documentType:
          "$ref": "#/components/schemas/OperationDocumentTypeEnum"
        id:
          title: Id
          type: string
          description: Embat operation internal ID
        companyId:
          title: Companyid
          type: string
          description: Embat company ID. You can get them from "companies" endpoints
        updatedAt:
          title: Updatedat
          type: string
          description: Last updated date of the entity in the database
          format: date-time
        createdAt:
          title: Createdat
          type: string
          description: Created date of the entity in the database
          format: date-time
        tags:
          title: Tags
          type: array
          items: {}
        categoryId:
          title: Categoryid
          type: string
        generatedFrom:
          title: Generatedfrom
          type: string
        comments:
          title: Comments
          anyOf:
          - type: array
            items: {}
          - type: string
        uploadedFiles:
          title: Uploadedfiles
          type: array
          items: {}
        secondary:
          title: Secondary
          type: boolean
    GetPaymentsResponseSchema:
      title: GetPaymentsResponseSchema
      required:
      - date
      - amount
      - id
      - companyId
      - updatedAt
      - createdAt
      type: object
      properties:
        method:
          title: Method
          type: string
          default: bank-transaction
        transactionId:
          title: Transactionid
          type: string
        operations:
          title: Operations
          type: array
          items:
            "$ref": "#/components/schemas/OperationPaymentResponseSchema"
        productId:
          title: Productid
          type: string
        contactCustomId:
          title: Contactcustomid
          type: string
        date:
          title: Date
          type: string
          format: date-time
        concept:
          title: Concept
          type: string
        amount:
          title: Amount
          type: number
        accountingAmount:
          title: Accountingamount
          type: number
        currency:
          "$ref": "#/components/schemas/CurrencyEnum"
        accountingCurrency:
          "$ref": "#/components/schemas/CurrencyEnum"
        exchangeRate:
          title: Exchangerate
          type: number
        additionalInfo:
          title: Additionalinfo
          type: object
        attributes:
          title: Attributes
          type: array
          items:
            "$ref": "#/components/schemas/AttributeValueRequestSchema"
        id:
          title: Id
          type: string
          description: Embat payment ID
        customId:
          title: Customid
          type: string
        type:
          "$ref": "#/components/schemas/PaymentShortTypeEnum"
        productAccountingCode:
          title: Productaccountingcode
          type: string
          description: Product accounting code
        accountingCode:
          title: Accountingcode
          type: string
        paymentSource:
          allOf:
          - "$ref": "#/components/schemas/SourceEnum"
          default: embat
        companyId:
          title: Companyid
          type: string
          description: Embat company ID. You can get them from "companies" endpoints
        updatedAt:
          title: Updatedat
          type: string
          description: Last updated date of the entity in the database
          format: date-time
        createdAt:
          title: Createdat
          type: string
          description: Created date of the entity in the database
          format: date-time
        sync:
          title: Sync
          type: boolean
          default: false
        registered:
          title: Registered
          type: boolean
          default: false
        userId:
          title: Userid
          type: string
        transactionAmount:
          title: Transactionamount
          type: number
        transactionAccountingAmount:
          title: Transactionaccountingamount
          type: number
        multicurrency:
          title: Multicurrency
          type: boolean
          default: false
        error:
          title: Error
          type: string
        contact:
          "$ref": "#/components/schemas/BaseContactSchema"
    GetProductsResponseSchema:
      title: GetProductsResponseSchema
      required:
      - id
      - bankId
      - companyId
      - currency
      - product
      - type
      - bank
      type: object
      properties:
        id:
          title: Id
          type: string
        bankId:
          title: Bankid
          type: string
        companyId:
          title: Companyid
          type: string
        accountingCode:
          title: Accountingcode
          type: string
        balance:
          title: Balance
          type: number
        balanceCreditGranted:
          title: Balancecreditgranted
          type: number
        countableBalance:
          title: Countablebalance
          type: number
        arrangedBalance:
          title: Arrangedbalance
          type: number
        updatedAt:
          title: Updatedat
          type: string
          format: date-time
        createdAt:
          title: Createdat
          type: string
          format: date-time
        currency:
          "$ref": "#/components/schemas/CurrencyEnum"
        product:
          title: Product
          type: string
        iban:
          title: Iban
          type: string
        type:
          title: Type
          type: string
        alias:
          title: Alias
          type: string
        description:
          title: Description
          type: string
        notes:
          title: Notes
          type: string
        bank:
          title: Bank
          type: string
        bankFullName:
          title: Bankfullname
          type: string
        additionalInfo:
          title: Additionalinfo
          type: object
        hasTransactions:
          title: Hastransactions
          type: boolean
        manual:
          title: Manual
          type: boolean
          default: false
    GetReconcilingItemsResponseSchema:
      title: GetReconcilingItemsResponseSchema
      required:
      - amount
      - currency
      - date
      - description
      - customId
      - reconcilingSourceCustomId
      - id
      - companyId
      - updatedAt
      - createdAt
      type: object
      properties:
        amount:
          title: Amount
          type: number
          description: Amount of the reconciling item
        currency:
          allOf:
          - "$ref": "#/components/schemas/CurrencyEnum"
          description: Currency of the reconciling item in ISO 4217 format
        date:
          title: Date
          type: string
          description: Date of the reconciling item
          format: date-time
        description:
          title: Description
          type: string
          description: Description of the reconciling item
        metadata:
          title: Metadata
          type: object
          description: Metadata of the reconciling item. You can use it to store any
            information you want to associate with the reconciling item.
        additionalInfo:
          title: Additionalinfo
          type: object
          description: Additional information of the reconciling item
        customId:
          title: Customid
          type: string
          description: Embat custom/auto unique reconciling item identifier. You can
            use as your internal reconciling item identifier
        reconcilingSourceCustomId:
          title: Reconcilingsourcecustomid
          type: string
          description: Embat custom/auto unique Reconciling Source identifier. You
            can get them from 'Reconciling Sources' endpoints
        id:
          title: Id
          type: string
          description: Embat reconciling item internal identifier
        companyId:
          title: Companyid
          type: string
          description: Embat company identifier. You can get them from 'companies'
            endpoints
        updatedAt:
          title: Updatedat
          type: string
          description: Last updated date of the entity
          format: date-time
        createdAt:
          title: Createdat
          type: string
          description: Created date of the entity
          format: date-time
        reconciled:
          title: Reconciled
          type: boolean
          description: Flag to indicate if the reconciling item has been reconciled
          default: false
    GetReconcilingSourceResponseSchema:
      title: GetReconcilingSourceResponseSchema
      required:
      - name
      - customId
      - id
      - companyId
      - updatedAt
      - createdAt
      type: object
      properties:
        name:
          title: Name
          type: string
          description: Name of the reconciling source
        additionalInfo:
          title: Additionalinfo
          type: object
          description: Additional information about the reconciling source
        matchingMetadataKey:
          title: Matchingmetadatakey
          type: string
          description: Metadata key of the reconciling items to match with product
            transactions
        customId:
          title: Customid
          type: string
          description: Embat custom/auto unique reconciling source ID. You can use
            as your internal reconciling source id
        id:
          title: Id
          type: string
          description: Embat reconciling source internal ID
        companyId:
          title: Companyid
          type: string
          description: Embat company ID. You can get them from "companies" endpoints
        updatedAt:
          title: Updatedat
          type: string
          description: Last updated date of the entity in the database
          format: date-time
        createdAt:
          title: Createdat
          type: string
          description: Created date of the entity in the database
          format: date-time
    GetScenarioResponseSchema:
      title: GetScenarioResponseSchema
      type: object
      properties:
        id:
          title: Id
          type: string
        companyId:
          title: Companyid
          type: string
        name:
          title: Name
          type: string
        currency:
          "$ref": "#/components/schemas/CurrencyEnum"
        description:
          title: Description
          type: string
        periodicity:
          "$ref": "#/components/schemas/PeriodicityEnum"
        createdAt:
          title: Createdat
          type: string
          format: date-time
        updatedAt:
          title: Updatedat
          type: string
          format: date-time
        startPeriod:
          title: Startperiod
          type: integer
        endPeriod:
          title: Endperiod
          type: integer
    GetTransactionsResponseSchema:
      title: GetTransactionsResponseSchema
      type: object
      properties:
        id:
          title: Id
          type: string
        balance:
          title: Balance
          type: number
        operationDate:
          title: Operationdate
          type: string
          format: date-time
        valueDate:
          title: Valuedate
          type: string
          format: date-time
        updatedAt:
          title: Updatedat
          type: string
          format: date-time
        createdAt:
          title: Createdat
          type: string
          format: date-time
        companyId:
          title: Companyid
          type: string
        additionalInfo:
          title: Additionalinfo
          type: object
          default: {}
        bank:
          title: Bank
          type: string
        concept:
          title: Concept
          type: string
        amount:
          title: Amount
          type: number
        accountingAmount:
          title: Accountingamount
          type: number
        exchangeRate:
          title: Exchangerate
          type: number
        accountingCurrency:
          "$ref": "#/components/schemas/CurrencyEnum"
        reconciled:
          title: Reconciled
          type: boolean
          default: false
        status:
          "$ref": "#/components/schemas/StatusEnum"
        product:
          "$ref": "#/components/schemas/ProductBaseSchema"
        sync:
          title: Sync
          type: boolean
          default: false
        attributes:
          title: Attributes
          type: array
          items:
            "$ref": "#/components/schemas/AttributeValueRequestSchema"
        categories:
          title: Categories
          type: array
          items:
            "$ref": "#/components/schemas/TransactionsAnalyticsSchema"
        tags:
          title: Tags
          type: array
          items:
            type: string
        groupAmount:
          title: Groupamount
          type: number
        groupExchangeRate:
          title: Groupexchangerate
          type: number
        groupCurrency:
          "$ref": "#/components/schemas/CurrencyEnum"
        currencyExchangeData:
          "$ref": "#/components/schemas/TransactionCurrencyExchangeDataSchema"
        comment:
          title: Comment
          type: string
      description: Transactions response data schema
    HTTPValidationError:
      title: HTTPValidationError
      type: object
      properties:
        detail:
          title: Detail
          type: array
          items:
            "$ref": "#/components/schemas/ValidationError"
    ListAccountingEntriesResponseSchema:
      title: ListAccountingEntriesResponseSchema
      required:
      - data
      type: object
      properties:
        data:
          title: Data
          type: array
          items:
            "$ref": "#/components/schemas/GetAccountingEntriesResponseSchema"
        nextPageToken:
          title: Nextpagetoken
          type: string
    ListAccountingsAccountsResponseSchema:
      title: ListAccountingsAccountsResponseSchema
      required:
      - data
      type: object
      properties:
        data:
          title: Data
          type: array
          items:
            "$ref": "#/components/schemas/GetAccountingsAccountsResponseSchema"
        nextPageToken:
          title: Nextpagetoken
          type: string
    ListAttributesResponseSchema:
      title: ListAttributesResponseSchema
      required:
      - data
      type: object
      properties:
        data:
          title: Data
          type: array
          items:
            "$ref": "#/components/schemas/GetAttributesResponseSchema"
    ListBalancesResponseSchema:
      title: ListBalancesResponseSchema
      required:
      - data
      type: object
      properties:
        data:
          title: Data
          type: array
          items:
            "$ref": "#/components/schemas/GetBalancesResponseSchema"
        nextPageToken:
          title: Nextpagetoken
          type: string
    ListBanksResponseSchema:
      title: ListBanksResponseSchema
      required:
      - data
      type: object
      properties:
        data:
          title: Data
          type: array
          items:
            "$ref": "#/components/schemas/GetBanksResponseSchema"
    ListCategoriesResponseSchema:
      title: ListCategoriesResponseSchema
      required:
      - data
      type: object
      properties:
        data:
          title: Data
          type: array
          items:
            "$ref": "#/components/schemas/GetCategoriesResponseSchema"
    ListCompaniesResponseSchema:
      title: ListCompaniesResponseSchema
      required:
      - data
      type: object
      properties:
        data:
          title: Data
          type: array
          items:
            "$ref": "#/components/schemas/CompanyResponseSchema"
    ListCompanyUsersResponseSchema:
      title: ListCompanyUsersResponseSchema
      required:
      - data
      type: object
      properties:
        data:
          title: Data
          type: array
          items:
            "$ref": "#/components/schemas/CompanyUserSchema"
    ListContactsResponseSchema:
      title: ListContactsResponseSchema
      required:
      - data
      type: object
      properties:
        nextPageToken:
          title: Nextpagetoken
          type: string
        data:
          title: Data
          type: array
          items:
            "$ref": "#/components/schemas/GetContactsResponseSchema"
    ListForecastsResponseSchema:
      title: ListForecastsResponseSchema
      required:
      - data
      type: object
      properties:
        data:
          title: Data
          type: array
          items:
            "$ref": "#/components/schemas/GetForecastsResponseSchema"
        nextPageToken:
          title: Nextpagetoken
          type: string
    ListForeignExchangeRatesResponseSchema:
      title: ListForeignExchangeRatesResponseSchema
      required:
      - data
      type: object
      properties:
        data:
          title: Data
          type: array
          items:
            "$ref": "#/components/schemas/GetForeignExchangeRatesResponseSchema"
        nextPageToken:
          title: Nextpagetoken
          type: string
    ListOperationsResponseSchema:
      title: ListOperationsResponseSchema
      required:
      - data
      type: object
      properties:
        data:
          title: Data
          type: array
          items:
            "$ref": "#/components/schemas/GetOperationsResponseSchema"
        nextPageToken:
          title: Nextpagetoken
          type: string
    ListPaymentsResponseSchema:
      title: ListPaymentsResponseSchema
      required:
      - data
      type: object
      properties:
        data:
          title: Data
          type: array
          items:
            "$ref": "#/components/schemas/GetPaymentsResponseSchema"
        nextPageToken:
          title: Nextpagetoken
          type: string
    ListProductsResponseSchema:
      title: ListProductsResponseSchema
      required:
      - data
      type: object
      properties:
        data:
          title: Data
          type: array
          items:
            "$ref": "#/components/schemas/GetProductsResponseSchema"
    ListReconcilingItemsResponseSchema:
      title: ListReconcilingItemsResponseSchema
      required:
      - data
      type: object
      properties:
        data:
          title: Data
          type: array
          items:
            "$ref": "#/components/schemas/GetReconcilingItemsResponseSchema"
        nextPageToken:
          title: Nextpagetoken
          type: string
          description: Next page token to get the next page of reconciling items
    ListReconcilingSourcesResponseSchema:
      title: ListReconcilingSourcesResponseSchema
      required:
      - data
      type: object
      properties:
        data:
          title: Data
          type: array
          items:
            "$ref": "#/components/schemas/GetReconcilingSourceResponseSchema"
    ListScenariosResponseSchema:
      title: ListScenariosResponseSchema
      required:
      - data
      type: object
      properties:
        data:
          title: Data
          type: array
          items:
            "$ref": "#/components/schemas/GetScenarioResponseSchema"
    ListTransactionsResponseSchema:
      title: ListTransactionsResponseSchema
      required:
      - data
      type: object
      properties:
        data:
          title: Data
          type: array
          items:
            "$ref": "#/components/schemas/GetTransactionsResponseSchema"
        nextPageToken:
          title: Nextpagetoken
          type: string
    LogsCodesEnum:
      title: LogsCodesEnum
      enum:
      - INFO
      - WARNING
      - ERROR
      - AUTHORIZATION_INFO
      - AUTHORIZATION_WARNING
      - AUTHORIZATION_ERROR
      - ACCOUNTINGS_ACCOUNTS_INFO
      - ACCOUNTINGS_ACCOUNTS_WARNING
      - ACCOUNTINGS_ACCOUNTS_ERROR
      - ACCOUNTINGS_ENTRIES_INFO
      - ACCOUNTINGS_ENTRIES_WARNING
      - ACCOUNTINGS_ENTRIES_ERROR
      - ATTRIBUTES_INFO
      - ATTRIBUTES_WARNING
      - ATTRIBUTES_ERROR
      - CONTACTS_INFO
      - CONTACTS_WARNING
      - CONTACTS_ERROR
      - OPERATIONS_INFO
      - OPERATIONS_WARNING
      - OPERATIONS_ERROR
      - PAYMENTS_INFO
      - PAYMENTS_WARNING
      - PAYMENTS_ERROR
      type: string
      description: An enumeration.
    LogsLevelsEnum:
      title: LogsLevelsEnum
      enum:
      - INFO
      - ERROR
      - WARNING
      type: string
      description: An enumeration.
    ModifyAccountingEntriesResponseSchema:
      title: ModifyAccountingEntriesResponseSchema
      required:
      - id
      type: object
      properties:
        id:
          title: Id
          type: string
          description: Embat accountingEntry ID
    ModifyAccountingsAccountsResponseSchema:
      title: ModifyAccountingsAccountsResponseSchema
      required:
      - id
      type: object
      properties:
        id:
          title: Id
          type: string
          description: Embat accountingsAccount ID
    ModifyAttributesResponseSchema:
      title: ModifyAttributesResponseSchema
      required:
      - id
      type: object
      properties:
        id:
          title: Id
          type: string
          description: Embat attribute ID
    ModifyContactsResponseSchema:
      title: ModifyContactsResponseSchema
      required:
      - id
      type: object
      properties:
        id:
          title: Id
          type: string
          description: Embat contact ID
    ModifyForecastsResponseSchema:
      title: ModifyForecastsResponseSchema
      required:
      - id
      type: object
      properties:
        id:
          title: Id
          type: string
          description: Embat forecast ID
    ModifyOperationsResponseSchema:
      title: ModifyOperationsResponseSchema
      required:
      - id
      type: object
      properties:
        id:
          title: Id
          type: string
          description: Embat operation ID
    ModifyPaymentsResponseSchema:
      title: ModifyPaymentsResponseSchema
      required:
      - id
      type: object
      properties:
        id:
          title: Id
          type: string
          description: Embat payment ID
    ModifyProductsResponseSchema:
      title: ModifyProductsResponseSchema
      required:
      - id
      type: object
      properties:
        id:
          title: Id
          type: string
          description: Embat product ID
    ModifyReconcilingItemsResponseSchema:
      title: ModifyReconcilingItemsResponseSchema
      required:
      - id
      type: object
      properties:
        id:
          title: Id
          type: string
          description: Embat reconciling item identifier
    ModifyReconcilingSourceResponseSchema:
      title: ModifyReconcilingSourceResponseSchema
      required:
      - id
      type: object
      properties:
        id:
          title: Id
          type: string
          description: Embat reconciling source ID
    ModifyTransactionsResponseSchema:
      title: ModifyTransactionsResponseSchema
      required:
      - id
      type: object
      properties:
        id:
          title: Id
          type: string
          description: Embat transaction ID
    OperationDocumentTypeEnum:
      title: OperationDocumentTypeEnum
      enum:
      - invoice
      - other
      - note
      - invoiceGroup
      - confirming
      - deposit
      - factoring
      - tax
      - amortizationQuote
      - amortizationInterest
      - amortizationTax
      - refund
      - paymentDocument
      - cheque
      - deliveryNote
      - purchaseOrder
      type: string
      description: An enumeration.
    OperationPaymentRequestSchema:
      title: OperationPaymentRequestSchema
      required:
      - amount
      - customId
      type: object
      properties:
        amount:
          title: Amount
          type: number
        customId:
          title: Customid
          type: string
    OperationPaymentResponseSchema:
      title: OperationPaymentResponseSchema
      required:
      - amount
      - customId
      type: object
      properties:
        amount:
          title: Amount
          type: number
        customId:
          title: Customid
          type: string
        currency:
          "$ref": "#/components/schemas/CurrencyEnum"
        paymentAmount:
          title: Paymentamount
          type: number
        id:
          title: Id
          type: string
        exchangeRate:
          title: Exchangerate
          type: number
        invoiceGroupDocumentId:
          title: Invoicegroupdocumentid
          type: string
        documentId:
          title: Documentid
          type: string
        issuanceDate:
          title: Issuancedate
          type: string
          format: date-time
    OperationStatusEnum:
      title: OperationStatusEnum
      enum:
      - paymentOrder
      - cancel
      - paid
      - payment_in_progress
      - overdue
      - pending
      - shipped
      type: string
      description: An enumeration.
    PatchAccountingEntriesRequestSchema:
      title: PatchAccountingEntriesRequestSchema
      type: object
      properties:
        accountingCode:
          title: Accountingcode
          type: string
        counterpartAccountingCode:
          title: Counterpartaccountingcode
          type: string
          description: counterpart ledger account code
        accountingName:
          title: Accountingname
          type: string
        assetAmount:
          title: Assetamount
          type: number
        accountingAssetAmount:
          title: Accountingassetamount
          type: number
        balance:
          title: Balance
          type: number
          description: relative balance of ledger account post entry
        liabilityAmount:
          title: Liabilityamount
          type: number
        accountingLiabilityAmount:
          title: Accountingliabilityamount
          type: number
        currency:
          "$ref": "#/components/schemas/CurrencyEnum"
        accountingCurrency:
          "$ref": "#/components/schemas/CurrencyEnum"
        contactCustomId:
          title: Contactcustomid
          type: string
          description: contact custom id, when the accounting code is contacts account
        exchangeRate:
          title: Exchangerate
          type: number
        additionalInfo:
          title: Additionalinfo
          type: object
        description:
          title: Description
          type: string
        documentId:
          title: Documentid
          type: string
        transactionsIds:
          title: Transactionsids
          type: array
          items:
            type: string
        paymentId:
          title: Paymentid
          type: string
        date:
          title: Date
          type: string
          format: date-time
        attributes:
          title: Attributes
          type: array
          items:
            "$ref": "#/components/schemas/AttributeValueRequestSchema"
    PatchAccountingsAccountsRequestSchema:
      title: PatchAccountingsAccountsRequestSchema
      type: object
      properties:
        active:
          title: Active
          type: boolean
        type:
          "$ref": "#/components/schemas/AccountingTypeEnum"
        accountingName:
          title: Accountingname
          type: string
        collective:
          title: Collective
          type: boolean
          description: collective accounting account
        additionalInfo:
          title: Additionalinfo
          type: object
        attributes:
          title: Attributes
          type: array
          items:
            "$ref": "#/components/schemas/AttributeValueRequestACCOUNTSchema"
    PatchAttributesRequestSchema:
      title: PatchAttributesRequestSchema
      type: object
      properties:
        name:
          title: Name
          type: string
        active:
          title: Active
          type: boolean
          default: true
        values:
          title: Values
          type: array
          items:
            "$ref": "#/components/schemas/AttributesRequestValuesSchema"
    PatchContactsRequestSchema:
      title: PatchContactsRequestSchema
      type: object
      properties:
        tradeName:
          title: Tradename
          type: string
          description: contact commercial name
        legalName:
          title: Legalname
          type: string
          description: contact legal name
        taxId:
          title: Taxid
          type: string
          description: tax id CIF/NIF/VAT
        contact:
          title: Contact
          allOf:
          - "$ref": "#/components/schemas/app__schemas__contacts__ContactSchema"
          description: personal information about contact
        address:
          title: Address
          allOf:
          - "$ref": "#/components/schemas/ContactAddressSchema"
          description: address information about contact
        contactType:
          allOf:
          - "$ref": "#/components/schemas/ContactContactTypeEnum"
          description: contact type
          default: company
        type:
          allOf:
          - "$ref": "#/components/schemas/ContactTypeEnum"
          description: contact type as client/supplier
        accounts:
          title: Accounts
          type: array
          items:
            "$ref": "#/components/schemas/ContactAccounts"
          description: contact accounts
        paymentsAccounts:
          title: Paymentsaccounts
          type: array
          items:
            "$ref": "#/components/schemas/ContactNewAccount"
          description: contact payments accounts
        additionalInfo:
          title: Additionalinfo
          type: object
        accountingCode:
          title: Accountingcode
          type: string
        paymentMethod:
          title: Paymentmethod
          type: string
        paymentTerms:
          title: Paymentterms
          type: integer
          description: contact payment terms in days
        attributes:
          title: Attributes
          type: array
          items:
            "$ref": "#/components/schemas/AttributeValueRequestSchema"
    PatchForecastsRequestSchema:
      title: PatchForecastsRequestSchema
      type: object
      properties:
        additionalInfo:
          title: Additionalinfo
          type: object
          default: {}
        sync:
          title: Sync
          type: boolean
    PatchOperationsRequestSchema:
      title: PatchOperationsRequestSchema
      type: object
      properties:
        status:
          "$ref": "#/components/schemas/OperationStatusEnum"
        paymentDate:
          title: Paymentdate
          type: string
          format: date-time
        chargeAccount:
          title: Chargeaccount
          type: string
          description: IBAN
        contactAccount:
          title: Contactaccount
          type: string
          description: IBAN
        issuanceDate:
          title: Issuancedate
          type: string
          format: date-time
        dueDate:
          title: Duedate
          type: string
          format: date-time
        accountingCode:
          title: Accountingcode
          type: string
        accountingName:
          title: Accountingname
          type: string
        operationsCustomIds:
          title: Operationscustomids
          type: array
          items:
            type: string
        concept:
          title: Concept
          type: string
        amount:
          title: Amount
          type: number
        accountingAmount:
          title: Accountingamount
          type: number
        currency:
          "$ref": "#/components/schemas/CurrencyEnum"
        accountingCurrency:
          "$ref": "#/components/schemas/CurrencyEnum"
        exchangeRate:
          title: Exchangerate
          type: number
        paymentMethod:
          title: Paymentmethod
          type: string
        contact:
          "$ref": "#/components/schemas/BaseContactSchema"
        additionalInfo:
          title: Additionalinfo
          type: object
        invoiceGroupDocumentId:
          title: Invoicegroupdocumentid
          type: string
        sync:
          title: Sync
          type: boolean
          default: false
        attributes:
          title: Attributes
          type: array
          items:
            "$ref": "#/components/schemas/AttributeValueRequestSchema"
    PatchPaymentsRequestSchema:
      title: PatchPaymentsRequestSchema
      type: object
      properties:
        sync:
          title: Sync
          type: boolean
        additionalInfo:
          title: Additionalinfo
          type: object
        error:
          title: Error
          type: string
        registered:
          title: Registered
          type: boolean
    PatchProductsRequestSchema:
      title: PatchProductsRequestSchema
      type: object
      properties:
        additionalInfo:
          title: Additionalinfo
          type: object
          default: {}
        accountingCode:
          title: Accountingcode
          type: string
    PatchReconcilingItemSchema:
      title: PatchReconcilingItemSchema
      type: object
      properties:
        amount:
          title: Amount
          type: number
          description: Amount of the reconciling item
        currency:
          allOf:
          - "$ref": "#/components/schemas/CurrencyEnum"
          description: Currency of the reconciling item in ISO 4217 format
        date:
          title: Date
          type: string
          description: Date of the reconciling item
          format: date-time
        description:
          title: Description
          type: string
          description: Description of the reconciling item
        metadata:
          title: Metadata
          type: object
          description: Metadata of the reconciling item. You can use it to store any
            information you want to associate with the reconciling item.
        additionalInfo:
          title: Additionalinfo
          type: object
          description: Additional information of the reconciling item
    PatchReconcilingSourceSchema:
      title: PatchReconcilingSourceSchema
      type: object
      properties:
        name:
          title: Name
          type: string
          description: Name of the reconciling source
        additionalInfo:
          title: Additionalinfo
          type: object
          description: Additional information about the reconciling source
        matchingMetadataKey:
          title: Matchingmetadatakey
          type: string
          description: Metadata key of the reconciling items to match with product
            transactions
    PatchTransactionsRequestSchema:
      title: PatchTransactionsRequestSchema
      type: object
      properties:
        additionalInfo:
          title: Additionalinfo
          type: object
          default: {}
        attributes:
          title: Attributes
          type: array
          items:
            "$ref": "#/components/schemas/AttributeValueRequestSchema"
        sync:
          title: Sync
          type: boolean
    PaymentShortTypeEnum:
      title: PaymentShortTypeEnum
      enum:
      - contacts
      - accountings
      - operations
      - banks
      type: string
      description: An enumeration.
    PeriodicityEnum:
      title: PeriodicityEnum
      enum:
      - monthly
      - yearly
      - weekly
      - daily
      type: string
      description: An enumeration.
    PostAccountingEntriesRequestSchema:
      title: PostAccountingEntriesRequestSchema
      required:
      - accountingCode
      - assetAmount
      - liabilityAmount
      - date
      type: object
      properties:
        accountingCode:
          title: Accountingcode
          minLength: 1
          type: string
        counterpartAccountingCode:
          title: Counterpartaccountingcode
          type: string
          description: counterpart ledger account code
        accountingName:
          title: Accountingname
          type: string
        assetAmount:
          title: Assetamount
          type: number
        accountingAssetAmount:
          title: Accountingassetamount
          type: number
        balance:
          title: Balance
          type: number
          description: relative balance of ledger account post entry
        liabilityAmount:
          title: Liabilityamount
          type: number
        accountingLiabilityAmount:
          title: Accountingliabilityamount
          type: number
        currency:
          "$ref": "#/components/schemas/CurrencyEnum"
        accountingCurrency:
          "$ref": "#/components/schemas/CurrencyEnum"
        contactCustomId:
          title: Contactcustomid
          type: string
          description: contact custom id, when the accounting code is contacts account
        exchangeRate:
          title: Exchangerate
          type: number
        additionalInfo:
          title: Additionalinfo
          type: object
        description:
          title: Description
          type: string
        documentId:
          title: Documentid
          type: string
        transactionsIds:
          title: Transactionsids
          type: array
          items:
            type: string
        paymentId:
          title: Paymentid
          type: string
        date:
          title: Date
          type: string
          format: date-time
        attributes:
          title: Attributes
          type: array
          items:
            "$ref": "#/components/schemas/AttributeValueRequestSchema"
        customId:
          title: Customid
          type: string
          description: Embat custom/auto unique accountingEntry ID. You can use as
            your custom ERP accounting entry id
        type:
          "$ref": "#/components/schemas/AccountingTypeEnum"
        accountingEntryCode:
          title: Accountingentrycode
          type: string
        accountingEntryCodeId:
          title: Accountingentrycodeid
          type: string
    PostAccountingsAccountsRequestSchema:
      title: PostAccountingsAccountsRequestSchema
      required:
      - accountingCode
      type: object
      properties:
        active:
          title: Active
          type: boolean
        type:
          "$ref": "#/components/schemas/AccountingTypeEnum"
        accountingName:
          title: Accountingname
          type: string
        collective:
          title: Collective
          type: boolean
          description: collective accounting account
        additionalInfo:
          title: Additionalinfo
          type: object
        attributes:
          title: Attributes
          type: array
          items:
            "$ref": "#/components/schemas/AttributeValueRequestACCOUNTSchema"
        accountingCode:
          title: Accountingcode
          type: string
    PostAttributesRequestSchema:
      title: PostAttributesRequestSchema
      required:
      - source
      - name
      - type
      type: object
      properties:
        customId:
          title: Customid
          type: string
        source:
          "$ref": "#/components/schemas/SourceEnum"
        active:
          title: Active
          type: boolean
          default: true
        name:
          title: Name
          type: string
        type:
          "$ref": "#/components/schemas/AttributesStatusEnum"
        required:
          title: Required
          type: boolean
          default: false
        values:
          title: Values
          type: array
          items:
            "$ref": "#/components/schemas/AttributesRequestValuesSchema"
    PostAuthenticationRequestSchema:
      title: PostAuthenticationRequestSchema
      required:
      - email
      - password
      type: object
      properties:
        email:
          title: Email
          type: string
        password:
          title: Password
          type: string
    PostAuthenticationResponseSchema:
      title: PostAuthenticationResponseSchema
      required:
      - idToken
      type: object
      properties:
        idToken:
          title: Idtoken
          type: string
    PostContactsRequestSchema:
      title: PostContactsRequestSchema
      required:
      - legalName
      - type
      type: object
      properties:
        tradeName:
          title: Tradename
          type: string
          description: contact commercial name
        legalName:
          title: Legalname
          type: string
          description: contact legal name
        taxId:
          title: Taxid
          type: string
          description: tax id CIF/NIF/VAT
        contact:
          title: Contact
          allOf:
          - "$ref": "#/components/schemas/app__schemas__contacts__ContactSchema"
          description: personal information about contact
        address:
          title: Address
          allOf:
          - "$ref": "#/components/schemas/ContactAddressSchema"
          description: address information about contact
        contactType:
          allOf:
          - "$ref": "#/components/schemas/ContactContactTypeEnum"
          description: contact type
          default: company
        type:
          allOf:
          - "$ref": "#/components/schemas/ContactTypeEnum"
          description: contact type as client/supplier
        accounts:
          title: Accounts
          type: array
          items:
            "$ref": "#/components/schemas/ContactAccounts"
          description: contact accounts
        paymentsAccounts:
          title: Paymentsaccounts
          type: array
          items:
            "$ref": "#/components/schemas/ContactNewAccount"
          description: contact payments accounts
        additionalInfo:
          title: Additionalinfo
          type: object
        accountingCode:
          title: Accountingcode
          type: string
        paymentMethod:
          title: Paymentmethod
          type: string
        paymentTerms:
          title: Paymentterms
          type: integer
          description: contact payment terms in days
        attributes:
          title: Attributes
          type: array
          items:
            "$ref": "#/components/schemas/AttributeValueRequestSchema"
        customId:
          title: Customid
          type: string
          description: Embat custom/auto unique contact ID. You can use as your custom
            ERP contact id
    PostLogRequestSchema:
      title: PostLogRequestSchema
      required:
      - erp
      - erpVersion
      - connectorVersion
      - level
      - code
      - message
      type: object
      properties:
        erp:
          "$ref": "#/components/schemas/ErspEnum"
        erpVersion:
          title: Erpversion
          type: string
        connectorVersion:
          title: Connectorversion
          type: string
        level:
          "$ref": "#/components/schemas/LogsLevelsEnum"
        code:
          "$ref": "#/components/schemas/LogsCodesEnum"
        message:
          title: Message
          type: string
    PostOperationsAttributesRequestSchema:
      title: PostOperationsAttributesRequestSchema
      required:
      - customId
      - attributes
      type: object
      properties:
        customId:
          title: Customid
          type: string
        attributes:
          title: Attributes
          type: array
          items:
            "$ref": "#/components/schemas/AttributeValueRequestSchema"
    PostOperationsRequestSchema:
      title: PostOperationsRequestSchema
      required:
      - issuanceDate
      - dueDate
      - concept
      - amount
      - currency
      type: object
      properties:
        status:
          "$ref": "#/components/schemas/OperationStatusEnum"
        paymentDate:
          title: Paymentdate
          type: string
          format: date-time
        chargeAccount:
          title: Chargeaccount
          type: string
          description: IBAN
        contactAccount:
          title: Contactaccount
          type: string
          description: IBAN
        issuanceDate:
          title: Issuancedate
          type: string
          format: date-time
        dueDate:
          title: Duedate
          type: string
          format: date-time
        accountingCode:
          title: Accountingcode
          type: string
        accountingName:
          title: Accountingname
          type: string
        operationsCustomIds:
          title: Operationscustomids
          type: array
          items:
            type: string
        concept:
          title: Concept
          type: string
        amount:
          title: Amount
          type: number
        accountingAmount:
          title: Accountingamount
          type: number
        currency:
          "$ref": "#/components/schemas/CurrencyEnum"
        accountingCurrency:
          "$ref": "#/components/schemas/CurrencyEnum"
        exchangeRate:
          title: Exchangerate
          type: number
        paymentMethod:
          title: Paymentmethod
          type: string
        contact:
          "$ref": "#/components/schemas/BaseContactSchema"
        additionalInfo:
          title: Additionalinfo
          type: object
        invoiceGroupDocumentId:
          title: Invoicegroupdocumentid
          type: string
        sync:
          title: Sync
          type: boolean
          default: false
        attributes:
          title: Attributes
          type: array
          items:
            "$ref": "#/components/schemas/AttributeValueRequestSchema"
        customId:
          title: Customid
          type: string
        pendingAmount:
          title: Pendingamount
          type: number
        pendingAccountingAmount:
          title: Pendingaccountingamount
          type: number
        documentId:
          title: Documentid
          type: string
        documentType:
          "$ref": "#/components/schemas/OperationDocumentTypeEnum"
    PostPaymentsRequestSchema:
      title: PostPaymentsRequestSchema
      required:
      - operations
      - date
      - amount
      type: object
      properties:
        method:
          title: Method
          type: string
          default: bank-transaction
        transactionId:
          title: Transactionid
          type: string
        operations:
          title: Operations
          type: array
          items:
            "$ref": "#/components/schemas/OperationPaymentRequestSchema"
        productId:
          title: Productid
          type: string
        contactCustomId:
          title: Contactcustomid
          type: string
        date:
          title: Date
          type: string
          format: date-time
        concept:
          title: Concept
          type: string
        amount:
          title: Amount
          type: number
        accountingAmount:
          title: Accountingamount
          type: number
        currency:
          "$ref": "#/components/schemas/CurrencyEnum"
        accountingCurrency:
          "$ref": "#/components/schemas/CurrencyEnum"
        exchangeRate:
          title: Exchangerate
          type: number
        additionalInfo:
          title: Additionalinfo
          type: object
        attributes:
          title: Attributes
          type: array
          items:
            "$ref": "#/components/schemas/AttributeValueRequestSchema"
        customId:
          title: Customid
          type: string
    PostReconcilingItemSchema:
      title: PostReconcilingItemSchema
      required:
      - amount
      - currency
      - date
      - description
      - customId
      - reconcilingSourceCustomId
      type: object
      properties:
        amount:
          title: Amount
          type: number
          description: Amount of the reconciling item
        currency:
          allOf:
          - "$ref": "#/components/schemas/CurrencyEnum"
          description: Currency of the reconciling item in ISO 4217 format
        date:
          title: Date
          type: string
          description: Date of the reconciling item
          format: date-time
        description:
          title: Description
          type: string
          description: Description of the reconciling item
        metadata:
          title: Metadata
          type: object
          description: Metadata of the reconciling item. You can use it to store any
            information you want to associate with the reconciling item.
        additionalInfo:
          title: Additionalinfo
          type: object
          description: Additional information of the reconciling item
        customId:
          title: Customid
          type: string
          description: Embat custom/auto unique reconciling item identifier. You can
            use as your internal reconciling item identifier
        reconcilingSourceCustomId:
          title: Reconcilingsourcecustomid
          type: string
          description: Embat custom/auto unique Reconciling Source identifier. You
            can get them from 'Reconciling Sources' endpoints
    PostReconcilingSourceSchema:
      title: PostReconcilingSourceSchema
      required:
      - name
      - customId
      type: object
      properties:
        name:
          title: Name
          type: string
          description: Name of the reconciling source
        additionalInfo:
          title: Additionalinfo
          type: object
          description: Additional information about the reconciling source
        matchingMetadataKey:
          title: Matchingmetadatakey
          type: string
          description: Metadata key of the reconciling items to match with product
            transactions
        customId:
          title: Customid
          type: string
          description: Embat custom/auto unique reconciling source ID. You can use
            as your internal reconciling source id
    PostTransactionsRequestSchema:
      title: PostTransactionsRequestSchema
      required:
      - operationDate
      - valueDate
      - concept
      - amount
      type: object
      properties:
        operationDate:
          title: Operationdate
          type: string
          format: date
        valueDate:
          title: Valuedate
          type: string
          format: date
        concept:
          title: Concept
          type: string
        amount:
          title: Amount
          type: number
      description: Transactions request data schema
    ProductBaseSchema:
      title: ProductBaseSchema
      required:
      - id
      - currency
      - product
      type: object
      properties:
        id:
          title: Id
          type: string
        currency:
          "$ref": "#/components/schemas/CurrencyEnum"
        product:
          title: Product
          type: string
        bankFullName:
          title: Bankfullname
          type: string
        alias:
          title: Alias
          type: string
    ProductSchema:
      title: ProductSchema
      required:
      - id
      - currency
      - product
      - type
      type: object
      properties:
        id:
          title: Id
          type: string
        currency:
          "$ref": "#/components/schemas/CurrencyEnum"
        product:
          title: Product
          type: string
        alias:
          title: Alias
          type: string
        type:
          title: Type
          type: string
        balance:
          title: Balance
          type: number
        hasTransactions:
          title: Hastransactions
          type: boolean
        lastAggregationOK:
          title: Lastaggregationok
          type: string
          format: date-time
        accountNumber:
          title: Accountnumber
          type: string
    ScenarioSchema:
      title: ScenarioSchema
      type: object
      properties:
        id:
          title: Id
          type: string
        name:
          title: Name
          type: string
        currency:
          "$ref": "#/components/schemas/CurrencyEnum"
        description:
          title: Description
          type: string
        periodicity:
          "$ref": "#/components/schemas/PeriodicityEnum"
    SourceEnum:
      title: SourceEnum
      enum:
      - erp
      - api
      - embat
      type: string
      description: An enumeration.
    StatusEnum:
      title: StatusEnum
      enum:
      - PENDING
      - BOOKED
      type: string
      description: An enumeration.
    TagsSchema:
      title: TagsSchema
      required:
      - updatedAt
      - createdAt
      type: object
      properties:
        id:
          title: Id
          type: string
        updatedAt:
          title: Updatedat
          type: string
          description: Last updated date of the entity in the database
          format: date-time
        createdAt:
          title: Createdat
          type: string
          description: Created date of the entity in the database
          format: date-time
        name:
          title: Name
          type: string
    TransactionCurrencyExchangeDataSchema:
      title: TransactionCurrencyExchangeDataSchema
      type: object
      properties:
        originalAmount:
          title: Originalamount
          type: number
        originalCurrency:
          "$ref": "#/components/schemas/CurrencyEnum"
        grossAmount:
          title: Grossamount
          type: number
        fees:
          title: Fees
          type: number
    TransactionsAnalyticsSchema:
      title: TransactionsAnalyticsSchema
      type: object
      properties:
        categoryId:
          title: Categoryid
          type: string
        value:
          title: Value
          type: number
    ValidationError:
      title: ValidationError
      required:
      - loc
      - msg
      - type
      type: object
      properties:
        loc:
          title: Location
          type: array
          items:
            type: string
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
    app__schemas__companies__ContactSchema:
      title: ContactSchema
      type: object
      properties:
        phone:
          title: Phone
          type: string
        name:
          title: Name
          type: string
        surname:
          title: Surname
          type: string
        email:
          title: Email
          type: string
    app__schemas__contacts__ContactSchema:
      title: ContactSchema
      type: object
      properties:
        phone:
          title: Phone
          type: string
        email:
          title: Email
          type: string
          description: "(Required for CAD payments using Interac) Email"
        name:
          title: Name
          type: string
        surname:
          title: Surname
          type: string
  securitySchemes:
    HTTPBearer:
      type: http
      scheme: bearer
tags:
- name: Introduction
  description: "The Embat API allows obtaining financial information from each of
    the companies that the client has into Embat. Therefore, all the information exposed
    in the API is aggregated around the Embat company identifier `companyId`.\n\nYou
    can obtain the identifiers of each of your companies in the `/companies` endpoints,
    the rest of the entities within the API need this company identifier as a variable
    in the url.\n\nA user can belong to multiple companies, therefore an API access
    user can be authorized to consult N companies. You can read more about authentication
    and authorization in the authentication section.\n\n##### Custom identifiers\n\nThe
    entities in which Embat allows the creation by a third party directly from the
    API have a custom identifier field so that each client can manage it as a custom
    identifier. For example, if your `contacts` have a unique identifier in your ERP
    software, you can use the same identifier by creating the contact with the `customId`
    field as a unique identifier so that you can reference it.\n\nIf you create the
    entity object without this unique identifier, Embat will auto-generate one to
    provide uniformity of access in the API so that you can work with this identifier
    in the same way.\n\n##### Bulk operations\n\nYou can update, delete, and create
    multiple objects of the same entity with a single API request. There are endpoints
    with the ending `/bulk` to reference them.\n\n##### Filters\n\nIn requests for
    listing objects, you can apply filters (date, status...) on the data available
    in Embat for that company. By convention, we use optional query params in the
    url of the GET request.\n\n##### Integration fields \n\nThe `additionalInfo` and
    `sync` fields allow you to maintain control over your integration with Embat.\n\nThe
    `sync` field allows you to mark any entity for API integration process control.
    For example, if I have a process of reading Embat bank transactions through the
    API once a day to update my Business Intelligence tool where I update the information
    on some dashboards, I want to be able to update these transactions with a field
    to identify in the next execution of the integration that were already successfully
    integrated. You can use the `sync` boolean field for this, and you can use it
    as a filter in your queries.\n\nThe `additionalInfo` field is an open key/value
    object to be used in a custom way by each integration. You can add the fields
    or identifiers that want to take control of your integration with Embat without
    any restriction.\n\n##### Pagination and limits\n\nThe object list requests of
    some entities have some restrictions so as not to penalize performance due to
    the volume of data they may have.\n\nFor this reason, these requests are enforced
    limits of **1000** items in the response (default 500) and **30** days of data.
    To work with these limits, pagination of responses exists. If the length of the
    results for the selected filters is greater than 1000, the response from the endpoint
    has a variable `nextPageToken` that allows you to obtain the next N results by
    sending it as a query param with the same previous request.\n\nYou can also modify
    the response limits to a lower one with the `limit` filter on the listing endpoints
    of these entities."
- name: Authentication
  description: "Requests to the Embat API are authenticated using OAuth2 Access Token
    authentication. All requests are validated against this JWT `Authorization` header.\n\nAn
    `email` and `password` pair provides connectivity to each group of companies at
    Embat, so it is important to keep these credentials secure. Do not share your
    service `password` in publicly accessible areas such as GitHub, client-side code,
    etc.\n\nTo generate Access Tokens as a Bearer token you will have to make a POST
    request to `/authentication/token` that returns Bearer token as`idToken`. For
    example, if your response `idToken` is `diw9djw9d`, the header authorization content
    should be `Bearer diw9djw9d` for the rest of the requests. \n\nThis generated
    token has expiration time of **60 mins**. You can refresh the token with user/pass
    in the same endpoint.\n\nAll requests should be made via **HTTPS**."
- name: AccountingAccounts
  description: |-
    <code>AccountingsAccount</code> object respresents any accounting accounts of the journal. <code>accountingCode</code> represents unique id to Embat accountingsAccounts.

    Embat works with `accountingsAccounts` to make relationships with `transactions` to generate accounting entries.
- name: AccountingEntries
  description: |-
    <code>AccountingEntry</code> object respresents any entry of accounting general journal. <code>customId</code> represents unique id to Embat accountingEntries and you can use the field to put your ERP custom id when you create a accounting entry.

    Embat works with `accountingEntries` to make relationships (reconciliation process) with `transactions`.
- name: Attributes
  description: |-
    <code>Attribute</code> object respresents custom field to set in any entity into Embat. <code>customId</code> represents unique id to Embat attributes and you can use the field to put your custom id when you create an attribute.

    You can create an attribute and then set values of this attribute in different entities across Embat. An attribute is used in Embat as a analytic field, relationship field...

    You can set your ERP dimensions, your analytics fields of your systems or anything that you want to use in Embat as filters in tables, field into charts, etc.


    Embat works with `attributes` to set custom fields in `transactions`, `contacts`, `operations`, `accountingEntries` ...
- name: Balances
  description: "`Balance` object respresents any of bank product balance at the end
    of the day."
- name: Banks
  description: "`Bank` object represents any of banks relationships into Embat. You
    can get the last time that a bank is aggregated correctly. \n\nThe `bankProducts`
    array represents the list of bank products into a bank relationship like *checking*,
    *loan*, *card*..."
- name: Categories
  description: "`Category` object respresents any movements category in Embat. You
    can list and read companies with Embat API but you have to create them in Embat
    application. Categories have `parentId` that represent the id of the parent category.
    \nThe Embat user can build a category company tree like:\n\n- Payments\n    -
    Providers\n        - Europe\n        - Latam\n    - Payroll\n    \n- Collections\n
    \   - Subscriptions\n\nYou can make a relationship between ERP ledger account
    and Embat categories before adding any operation via API."
- name: Companies
  description: |-
    Embat companies endpoints are used to retrieve `id` to identify which company entity you will use in the rest of de API as a `companyId`.
    Companies are the parent entity of the API as identifier.
- name: Contacts
  description: "`Contact` object respresents any client and provider of operations.
    `customId` represents unique id to Embat contacts and you can use the field to
    put your ERP custom id when you create a contact."
- name: Forecasts
  description: "`Forecast` object respresents any of treasury scenario forecasts by
    category and scenario."
- name: ForeignExchangeRates
  description: |+
    `ForeignExchangeRate` object represents a foreign exchange rate used in Embat in accounting and banking.



- name: Logs
  description: "`Logs` object represents any execution log of an integration against
    the Embat API. You can report errors, execution information or warnings."
- name: Operations
  description: "`Operation` object respresents any of accounting operations. For example,
    an operation represents a due into a invoice, but if the invoice has multiple
    dues, there are multiple operations. `customId` represents unique id to Embat
    operations and you can use the field to put your ERP custom id when you create
    a operation or Embat will auto-generate it. "
- name: Payments
  description: |-
    <code>Payment</code> object respresents any of payments. <code>customId</code> represents unique id to Embat payments and you can use the field to put your ERP custom id when you create a payment.

    A payment can represent the relationship between a `transaction` and an `operation`, `transaction` that generate a ledger account entry or for example a cash payment into a `operation`. Payment entity is the union between bank world and accounting world into Embat.
- name: Products
  description: "`Product` object respresents any bank product of a company"
- name: ReconcilingItems
  description: |-
    <div style="background-color:#fff3cd; color:#856404; padding: 10px; border-left: 6px solid #ffeeba;">
    <strong>⚠️ Warning:</strong> This API section is in BETA. It might undergo significant changes and may not be stable.
    </div>

    <code>ReconcilingItems</code> represent individual financial records that need to be matched against product <code>transactions</code>. Each Reconciling Item belongs to a <code>ReconcilingSource</code>, which defines its origin (e.g., POS, internal system, CRM). These items contain essential financial details such as amount, currency, date, and description, as well as additional <code>metadata</code> to support reconciliation processes. <code>customId</code> represents unique id to Embat reconcilingItems.

    Each item includes a <code>customId</code> for unique identification and a <code>reconcilingSourceCustomId</code> to specify the Reconciling Source it belongs to. The metadata field allows storing custom attributes that may be required for matching transactions. The API also provides a reconciled flag to indicate whether an item has been successfully reconciled.

    The API supports individual and bulk operations for creating, updating, retrieving, and deleting Reconciling Items, ensuring efficient processing and management of reconciliation data at scale. Pagination is available for listing large datasets.
- name: ReconcilingSources
  description: |-
    <div style="background-color:#fff3cd; color:#856404; padding: 10px; border-left: 6px solid #ffeeba;">
    <strong>⚠️ Warning:</strong> This API section is in BETA. It might undergo significant changes and may not be stable.
    </div>

    <code>ReconcilingSources</code> represent the parent entities that group <code>ReconcilingItems</code> for reconciliation purposes. They define the origin of financial data that needs to be matched against product transactions, ensuring a structured and organized reconciliation process. <code>customId</code> represents unique id to Embat reconcilingSources.

    A Reconciling Source can represent a point-of-sale (POS) system, an internal financial system, or a CRM, among others. Each source acts as a container for its respective Reconciling Items, providing a way to categorize and manage reconciliation inputs effectively.

    Each Reconciling Source can specify a <code>matchingMetadataKey</code>, which determines the field within Reconciling Items metadata that should be used to associate them with product <code>transactions</code>. This allows for a flexible and scalable reconciliation framework.

    The API supports operations for creating, updating, retrieving, and deleting Reconciling Sources.
- name: Scenarios
  description: "`Scenario` object respresents any scenario of forecasting. ** Only
    published scenarios are returned"
- name: Transactions
  description: "`Transaction` object respresents any of bank account transactions.
    The `balance` associated to transactions is the product total balance after the
    transaction. "
